<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Workspace" referent="10">
		<Properties>
			<float name="AirDensity">0.00120000006</float>
			<bool name="AllowThirdPartySales">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<token name="AvatarUnificationMode">0</token>
			<token name="CSGAsyncDynamicCollision">0</token>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<token name="ClientAnimatorThrottling">0</token>
			<BinaryString name="CollisionGroupData"><![CDATA[AQIABP3///8HRGVmYXVsdAEE/v///x9QbHVnaW5fU3R1ZGlvVHdlYWtzX0JvdW5kaW5nQm94
]]></BinaryString>
			<Ref name="CurrentCamera">RBXFFA8360409F941F9934EB803FED45B14</Ref>
			<token name="DecreaseMinimumPartDensityMode">0</token>
			<bool name="DefinesCapabilities">false</bool>
			<double name="DistributedGameTime">0</double>
			<token name="EditorLiveScripting">0</token>
			<bool name="ExplicitAutoJoints">true</bool>
			<float name="FallenPartsDestroyHeight">-500</float>
			<token name="FluidForces">0</token>
			<Vector3 name="GlobalWind">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<float name="Gravity">196.199997</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<token name="IKControlConstraintSupport">0</token>
			<token name="LevelOfDetail">0</token>
			<token name="MeshPartHeadsAndAccessories">0</token>
			<CoordinateFrame name="ModelMeshCFrame">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
			<Vector3 name="ModelMeshSize">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<token name="ModelStreamingBehavior">0</token>
			<token name="ModelStreamingMode">0</token>
			<string name="Name">Workspace</string>
			<bool name="NeedsPivotMigration">false</bool>
			<token name="PhysicsSteppingMethod">0</token>
			<token name="PlayerCharacterDestroyBehavior">0</token>
			<token name="PrimalPhysicsSolver">0</token>
			<Ref name="PrimaryPart">null</Ref>
			<token name="RejectCharacterDeletions">0</token>
			<token name="ReplicateInstanceDestroySetting">0</token>
			<token name="Retargeting">0</token>
			<float name="ScaleFactor">1</float>
			<token name="SignalBehavior2">0</token>
			<int64 name="SourceAssetId">-1</int64>
			<token name="StreamOutBehavior">0</token>
			<bool name="StreamingEnabled">false</bool>
			<token name="StreamingIntegrityMode">0</token>
			<int name="StreamingMinRadius">64</int>
			<int name="StreamingTargetRadius">1024</int>
			<BinaryString name="Tags"></BinaryString>
			<bool name="TerrainWeldsFixed">true</bool>
			<bool name="TouchesUseCollisionGroups">false</bool>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000002</UniqueId>
			<OptionalCoordinateFrame name="WorldPivotData"></OptionalCoordinateFrame>
		</Properties>
		<Item class="Camera" referent="RBXFFA8360409F941F9934EB803FED45B14">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<CoordinateFrame name="CFrame">
					<X>4.11221027</X>
					<Y>9.70993805</Y>
					<Z>10.4637909</Z>
					<R00>0.969411969</R00>
					<R01>-0.0601777621</R01>
					<R02>0.237947613</R02>
					<R10>-0</R10>
					<R11>0.9694767</R11>
					<R12>0.245183975</R12>
					<R20>-0.245439216</R20>
					<R21>-0.23768428</R21>
					<R22>0.939822316</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<float name="FieldOfView">70</float>
				<token name="FieldOfViewMode">0</token>
				<CoordinateFrame name="Focus">
					<X>3.63631511</X>
					<Y>9.21957016</Y>
					<Z>8.5841465</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Camera</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000003</UniqueId>
				<bool name="VRTiltAndRollEnabled">false</bool>
			</Properties>
		</Item>
		<Item class="Part" referent="11">
			<Properties>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>-10</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4284636770</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Baseplate</string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900003dd2</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>512</X>
					<Y>20</Y>
					<Z>512</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Terrain" referent="RBX39E96A203DA7455A915100344A90DB27">
			<Properties>
				<token name="AcquisitionMethod">0</token>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="Decoration">false</bool>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="GrassLength">0.699999988</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<BinaryString name="MaterialColors"><![CDATA[AAAAAAAAan8/P39rf2Y/ilY+j35fi21PZmxvZbDqw8faiVpHOi4kHh4lZlw76JxKc3trhHta
gcLgc4RKxr21zq2UlJSM]]></BinaryString>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Terrain</string>
				<BinaryString name="PhysicsGrid">AgMAAAAAAAAAAAAAAAA=</BinaryString>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="ShorelinesUpgraded">false</bool>
				<BinaryString name="SmoothGrid">AQU=</BinaryString>
				<bool name="SmoothVoxelsUpgraded">false</bool>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900003dd3</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Color3 name="WaterColor">
					<R>0.0500000007</R>
					<G>0.330000013</G>
					<B>0.360000014</B>
				</Color3>
				<float name="WaterReflectance">1</float>
				<float name="WaterTransparency">0.300000012</float>
				<float name="WaterWaveSize">0.150000006</float>
				<float name="WaterWaveSpeed">10</float>
				<Vector3 name="size">
					<X>2044</X>
					<Y>252</Y>
					<Z>2044</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX27F66BD87A494BDEB8F937125CEE55EB">
			<Properties>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0.100000001</X>
					<Y>0.500003994</Y>
					<Z>-8.89999962</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4294901760</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">1552</token>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Killer</string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags">S2lsbGVy</BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a90000446d</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXCC6E81FBA5664E098E3C5832A13279E7">
			<Properties>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>8.10000038</X>
					<Y>0.500003994</Y>
					<Z>-7.89999962</Z>
					<R00>0.965925872</R00>
					<R01>0</R01>
					<R02>-0.258818835</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0.258818835</R20>
					<R21>0</R21>
					<R22>0.965925872</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4294901760</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">286f9e2715ccce1a062bb0a90000446d</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">1552</token>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Killer</string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags">S2lsbGVy</BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a9000044e1</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX86822160D163481EB131394270773F67">
			<Properties>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-7.9000001</X>
					<Y>0.500003994</Y>
					<Z>-7.89999962</Z>
					<R00>0.965925813</R00>
					<R01>0</R01>
					<R02>0.258819044</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>-0.258819044</R20>
					<R21>0</R21>
					<R22>0.965925813</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4294901760</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">286f9e2715ccce1a062bb0a90000446d</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">1552</token>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Killer</string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags">S2lsbGVy</BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a90000450e</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="SpawnLocation" referent="RBX4CCA88AA749F44739201321C907B644C">
			<Properties>
				<bool name="AllowTeamChangeOnTouch">false</bool>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="DefinesCapabilities">false</bool>
				<int name="Duration">10</int>
				<bool name="EnableFluidForces">true</bool>
				<bool name="Enabled">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">SpawnLocation</string>
				<bool name="Neutral">true</bool>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<int name="TeamColor">194</int>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">1</float>
				<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900004a83</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>4</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="MeshPart" referent="RBX2E2676D88B874054A73ED0AE2CE7B1C8">
			<Properties>
				<SharedString name="AeroMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>10.4999838</Y>
					<Z>-20</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="DoubleSided">false</bool>
				<bool name="EnableFluidForces">true</bool>
				<token name="FluidFidelityInternal">0</token>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<bool name="HasJointOffset">false</bool>
				<bool name="HasSkinnedMesh">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Vector3 name="InitialSize">
					<X>1.34124994</X>
					<Y>1.65496504</Y>
					<Z>1.34124994</Z>
				</Vector3>
				<Vector3 name="JointOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<Content name="MeshId"><url>rbxassetid://1778999</url></Content>
				<string name="Name">Cone</string>
				<SharedString name="PhysicalConfigData">vnASrALObGdJIkbgPn3MTQ==</SharedString>
				<BinaryString name="PhysicsData"></BinaryString>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<token name="RenderFidelity">1</token>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">12939630009</int64>
				<BinaryString name="Tags">RGlzY28=</BinaryString>
				<Content name="TextureID"><null></null></Content>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005624</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int name="VertexCount">76</int>
				<Vector3 name="size">
					<X>10</X>
					<Y>10</Y>
					<Z>10</Z>
				</Vector3>
			</Properties>
		</Item>
	</Item>
	<Item class="TimerService" referent="RBXD9EDA8A038514BE7958A1E993120A7A3">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TimerService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a90000030f</UniqueId>
		</Properties>
	</Item>
	<Item class="SoundService" referent="6">
		<Properties>
			<token name="AmbientReverb">0</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<float name="DistanceFactor">3.32999992</float>
			<float name="DopplerScale">1</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">SoundService</string>
			<bool name="RespectFilteringEnabled">true</bool>
			<float name="RolloffScale">1</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000310</UniqueId>
			<token name="VolumetricAudio">1</token>
		</Properties>
	</Item>
	<Item class="VideoCaptureService" referent="RBX7004C762807145A7BC4D81CE97239575">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VideoCaptureService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000311</UniqueId>
		</Properties>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBXC596935B601648209E888FED96047F5A">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000312</UniqueId>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBX0BADBD4D63B945FFB69D939F2DD7D988">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000313</UniqueId>
		</Properties>
	</Item>
	<Item class="Chat" referent="RBX01E08355356E403B989D554BAAE8475F">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="BubbleChatEnabled">false</bool>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="LoadDefaultChat">true</bool>
			<string name="Name">Chat</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000318</UniqueId>
		</Properties>
	</Item>
	<Item class="Players" referent="RBX8DE36A8CD15343899F94AEFC3A369C68">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="CharacterAutoLoads">true</bool>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxPlayersInternal">12</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">0</int>
			<float name="RespawnTime">5</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a90000031a</UniqueId>
			<bool name="UseStrafingAnimations">false</bool>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBXD7A3ED26267D4DE9AE7AC062261A1218">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ReplicatedFirst</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a90000031d</UniqueId>
		</Properties>
	</Item>
	<Item class="TweenService" referent="RBXAC2E2FFFCCEF451689BDFD668EC1567D">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TweenService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a90000031f</UniqueId>
		</Properties>
	</Item>
	<Item class="MaterialService" referent="RBX9E8B835C67574F398495A5DEA532F83A">
		<Properties>
			<string name="AsphaltName">Asphalt</string>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="BasaltName">Basalt</string>
			<string name="BrickName">Brick</string>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<string name="CardboardName">Cardboard</string>
			<string name="CarpetName">Carpet</string>
			<string name="CeramicTilesName">CeramicTiles</string>
			<string name="ClayRoofTilesName">ClayRoofTiles</string>
			<string name="CobblestoneName">Cobblestone</string>
			<string name="ConcreteName">Concrete</string>
			<string name="CorrodedMetalName">CorrodedMetal</string>
			<string name="CrackedLavaName">CrackedLava</string>
			<bool name="DefinesCapabilities">false</bool>
			<string name="DiamondPlateName">DiamondPlate</string>
			<string name="FabricName">Fabric</string>
			<string name="FoilName">Foil</string>
			<string name="GlacierName">Glacier</string>
			<string name="GraniteName">Granite</string>
			<string name="GrassName">Grass</string>
			<string name="GroundName">Ground</string>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="IceName">Ice</string>
			<string name="LeafyGrassName">LeafyGrass</string>
			<string name="LeatherName">Leather</string>
			<string name="LimestoneName">Limestone</string>
			<string name="MarbleName">Marble</string>
			<string name="MetalName">Metal</string>
			<string name="MudName">Mud</string>
			<string name="Name">MaterialService</string>
			<string name="PavementName">Pavement</string>
			<string name="PebbleName">Pebble</string>
			<string name="PlasterName">Plaster</string>
			<string name="PlasticName">Plastic</string>
			<string name="RockName">Rock</string>
			<string name="RoofShinglesName">RoofShingles</string>
			<string name="RubberName">Rubber</string>
			<string name="SaltName">Salt</string>
			<string name="SandName">Sand</string>
			<string name="SandstoneName">Sandstone</string>
			<string name="SlateName">Slate</string>
			<string name="SmoothPlasticName">SmoothPlastic</string>
			<string name="SnowName">Snow</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000320</UniqueId>
			<bool name="Use2022MaterialsXml">false</bool>
			<string name="WoodName">Wood</string>
			<string name="WoodPlanksName">WoodPlanks</string>
		</Properties>
	</Item>
	<Item class="TextChatService" referent="RBX1AC361E519534C9FAABDAA0EFF7FCA7A">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="ChatTranslationFTUXShown">true</bool>
			<bool name="ChatTranslationToggleEnabled">false</bool>
			<token name="ChatVersion">0</token>
			<bool name="CreateDefaultCommands">true</bool>
			<bool name="CreateDefaultTextChannels">true</bool>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TextChatService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000321</UniqueId>
		</Properties>
		<Item class="ChatWindowConfiguration" referent="RBX50D8E7589D4A4B46982CC55B7950EF67">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Color3 name="BackgroundColor3">
					<R>0.0980392173</R>
					<G>0.105882354</G>
					<B>0.113725491</B>
				</Color3>
				<double name="BackgroundTransparency">0.2999999999999999889</double>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">true</bool>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/GothamSSm.json</url></Family>
					<Weight>500</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/GothamSSm-Medium.otf</url></CachedFaceId>
				</Font>
				<float name="HeightScale">1</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<token name="HorizontalAlignment">1</token>
				<string name="Name">ChatWindowConfiguration</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<Color3 name="TextColor3">
					<R>1</R>
					<G>1</G>
					<B>1</B>
				</Color3>
				<int64 name="TextSize">14</int64>
				<Color3 name="TextStrokeColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<double name="TextStrokeTransparency">0.5</double>
				<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900003dd5</UniqueId>
				<token name="VerticalAlignment">1</token>
				<float name="WidthScale">1</float>
			</Properties>
		</Item>
		<Item class="ChatInputBarConfiguration" referent="RBXA39BA7463FBD415FB9C0AA35F36D5F6D">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutocompleteEnabled">true</bool>
				<Color3 name="BackgroundColor3">
					<R>0.0980392173</R>
					<G>0.105882354</G>
					<B>0.113725491</B>
				</Color3>
				<double name="BackgroundTransparency">0.2000000000000000111</double>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">true</bool>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/GothamSSm.json</url></Family>
					<Weight>500</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/GothamSSm-Medium.otf</url></CachedFaceId>
				</Font>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<token name="KeyboardKeyCode">47</token>
				<string name="Name">ChatInputBarConfiguration</string>
				<Color3 name="PlaceholderColor3">
					<R>0.698039234</R>
					<G>0.698039234</G>
					<B>0.698039234</B>
				</Color3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<Ref name="TargetTextChannel">null</Ref>
				<Color3 name="TextColor3">
					<R>1</R>
					<G>1</G>
					<B>1</B>
				</Color3>
				<int64 name="TextSize">14</int64>
				<Color3 name="TextStrokeColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<double name="TextStrokeTransparency">0.5</double>
				<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900003dd6</UniqueId>
			</Properties>
		</Item>
		<Item class="BubbleChatConfiguration" referent="RBX95CD890F9D5843AA9A549BC03BDD304C">
			<Properties>
				<string name="AdorneeName">HumanoidRootPart</string>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Color3 name="BackgroundColor3">
					<R>0.980392158</R>
					<G>0.980392158</G>
					<B>0.980392158</B>
				</Color3>
				<double name="BackgroundTransparency">0.10000000000000000555</double>
				<float name="BubbleDuration">15</float>
				<float name="BubblesSpacing">6</float>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">true</bool>
				<token name="Font">18</token>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/GothamSSm.json</url></Family>
					<Weight>500</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/GothamSSm-Medium.otf</url></CachedFaceId>
				</Font>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Vector3 name="LocalPlayerStudsOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="MaxBubbles">3</float>
				<float name="MaxDistance">100</float>
				<float name="MinimizeDistance">40</float>
				<string name="Name">BubbleChatConfiguration</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<bool name="TailVisible">true</bool>
				<Color3 name="TextColor3">
					<R>0.223529413</R>
					<G>0.23137255</G>
					<B>0.239215687</B>
				</Color3>
				<int64 name="TextSize">16</int64>
				<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900003dd7</UniqueId>
				<float name="VerticalStudsOffset">0</float>
			</Properties>
		</Item>
	</Item>
	<Item class="PermissionsService" referent="RBX7A34BFD0880E43CCA68B370683B31289">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PermissionsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000325</UniqueId>
		</Properties>
	</Item>
	<Item class="PlayerEmulatorService" referent="RBX2DD650890049497E8A4D97EDADE6D730">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="CustomPoliciesEnabled">false</bool>
			<bool name="DefinesCapabilities">false</bool>
			<string name="EmulatedCountryCode"></string>
			<string name="EmulatedGameLocale"></string>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PlayerEmulatorService</string>
			<bool name="PlayerEmulationEnabled">false</bool>
			<bool name="PseudolocalizationEnabled">false</bool>
			<BinaryString name="SerializedEmulatedPolicyInfo"></BinaryString>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000327</UniqueId>
		</Properties>
	</Item>
	<Item class="StudioData" referent="RBXB504501DA9FB42FAAA2BE44659791E92">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="EnableScriptCollabByDefaultOnLoad">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StudioData</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a90000032b</UniqueId>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="7">
		<Properties>
			<bool name="AllowCustomAnimations">true</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoJumpEnabled">true</bool>
			<token name="AvatarJointUpgrade_Serialized">0</token>
			<float name="CameraMaxZoomDistance">400</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<float name="CharacterJumpHeight">7.19999981</float>
			<float name="CharacterJumpPower">50</float>
			<float name="CharacterMaxSlopeAngle">89</float>
			<bool name="CharacterUseJumpPower">true</bool>
			<float name="CharacterWalkSpeed">16</float>
			<bool name="DefinesCapabilities">false</bool>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<token name="EnableDynamicHeads">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<int64 name="GameSettingsAssetIDFace">0</int64>
			<int64 name="GameSettingsAssetIDHead">0</int64>
			<int64 name="GameSettingsAssetIDLeftArm">0</int64>
			<int64 name="GameSettingsAssetIDLeftLeg">0</int64>
			<int64 name="GameSettingsAssetIDPants">0</int64>
			<int64 name="GameSettingsAssetIDRightArm">0</int64>
			<int64 name="GameSettingsAssetIDRightLeg">0</int64>
			<int64 name="GameSettingsAssetIDShirt">0</int64>
			<int64 name="GameSettingsAssetIDTeeShirt">0</int64>
			<int64 name="GameSettingsAssetIDTorso">0</int64>
			<token name="GameSettingsAvatar">1</token>
			<token name="GameSettingsR15Collision">0</token>
			<NumberRange name="GameSettingsScaleRangeBodyType">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHead">0.95 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHeight">0.9 1.05 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeProportion">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeWidth">0.7 1 </NumberRange>
			<float name="HealthDisplayDistance">100</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="LoadCharacterAppearance">true</bool>
			<token name="LoadCharacterLayeredClothing">0</token>
			<token name="LuaCharacterController">0</token>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a90000032d</UniqueId>
			<bool name="UserEmotesEnabled">true</bool>
		</Properties>
		<Item class="StarterPlayerScripts" referent="8">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">StarterPlayerScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900003dd0</UniqueId>
			</Properties>
			<Item class="Folder" referent="RBX72354957CFE346B8B85CC173C7594497">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Client</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900004192</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="StarterCharacterScripts" referent="RBX17932E0CB9674DA19AF98BB6C8969866">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">StarterCharacterScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900003dd4</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBX93F9ECAFC17E4584AABE1EEA9AF12079">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StarterPack</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a90000032e</UniqueId>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX6C0E826C24944036BA6FF807F74F26CF">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<token name="RtlTextSupport">0</token>
			<token name="ScreenOrientation">2</token>
			<bool name="ShowDevelopmentGui">true</bool>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a90000032f</UniqueId>
			<token name="VirtualCursorMode">0</token>
		</Properties>
	</Item>
	<Item class="LocalizationService" referent="RBX2F16D23A24744B1DA82485069748DE76">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">LocalizationService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000333</UniqueId>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBXE8B8605090C944DEA79721696E118A7C">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Teleport Service</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000336</UniqueId>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBX573FD5EC54A44F0199E585CA8543DCEF">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CollectionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000338</UniqueId>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBXBA511F764839425EBB3F29961AF25191">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000339</UniqueId>
		</Properties>
	</Item>
	<Item class="InsertService" referent="RBXCCC0EE48F868404D8725AEEC53A9B9AF">
		<Properties>
			<bool name="AllowClientInsertModels">false</bool>
			<bool name="AllowInsertFreeModels">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">InsertService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a90000033d</UniqueId>
		</Properties>
		<Item class="StringValue" referent="RBXD2B44EF7DB884EB2BF59BC594958B171">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">InsertionHash</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900004b58</UniqueId>
				<string name="Value">{3C13D28C-61D9-4C80-9667-6197DA461D0D}</string>
			</Properties>
		</Item>
	</Item>
	<Item class="GamePassService" referent="RBXA138BD3A2E4046B5882F21CC8EE70C49">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">GamePassService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a90000033e</UniqueId>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX9AEB29AE905649E6BB8A5E8842F85F14">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a90000033f</UniqueId>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBX646E6E88A4304D52ABD6D6CF7D408008">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CookiesService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000340</UniqueId>
		</Properties>
	</Item>
	<Item class="VRService" referent="RBXBFAFE7C1B1B942428EFCD4111E4E924E">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<token name="AutomaticScaling">0</token>
			<bool name="AvatarGestures">false</bool>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="FadeOutViewOnCollision">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VRService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000344</UniqueId>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBX02254AB42BF7482495A5E0DC491705E4">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ContextActionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000345</UniqueId>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX0E9F80CF83EA467A8E49196F91CF8DB9">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ScriptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000346</UniqueId>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBXFB8B17D4671C4BC78D5EEBB1E7DCCA15">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">AssetService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000347</UniqueId>
		</Properties>
	</Item>
	<Item class="TouchInputService" referent="RBX4DF0AB09E18E488F988FE5728C6D6A30">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TouchInputService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000348</UniqueId>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBX622EA811708D48A292DD3F3225FE0272">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Selection</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a90000034d</UniqueId>
		</Properties>
	</Item>
	<Item class="ServerScriptService" referent="4">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a90000034e</UniqueId>
		</Properties>
		<Item class="Folder" referent="RBXB1B1185210FE4669A3EF8CFE7529A3AC">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Server</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a9000049ab</UniqueId>
			</Properties>
			<Item class="Script" referent="RBXE5CDC60E3DF543B1BDAE36C8C407A1AC">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">true</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">CollectionServiceTests</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{FFD5748C-CD2A-4AB3-8A89-8CCA4298749F}</string>
					<ProtectedString name="Source"><![CDATA[local CollectionService = game:GetService("CollectionService")

-- Starting instances, a part and a folder
local instance0 = Instance.new("Part")
instance0.Name = "instance0"
instance0.Parent = game.Workspace
local instance1 = Instance.new("Folder")
instance1.Name = "instance1"
instance1.Parent = game.Workspace

CollectionService:AddTag(instance0, "Tag_A")


-- :GetTags()
-- Returns an array with all of the given instance's tags
local instance0_tags = CollectionService:GetTags(instance0)
local instance1_tags = CollectionService:GetTags(instance1)

print(instance0_tags) --> {"Tag_A"}
print(instance1_tags) --> {}

-- :GetTags() returns an array of strings, not a string
print(instance0_tags[1]) --> "Tag_A"


-- :GetTagged()
-- Returns an array of all instances with the given tag
local tagged_instances_A = CollectionService:GetTagged("Tag_A")
local tagged_instances_B = CollectionService:GetTagged("Tag_B")

print(tagged_instances_A) --> {instance0}
print(tagged_instances_B) --> {}

-- :GetTagged() returns an array of instances, not an instance nor string
print(tagged_instances_A[1])      --> instance0
print(tagged_instances_A[1].Name) --> "instance0"


-- :RemoveTag()
-- Removes a given tag from an instance :P
CollectionService:AddTag(instance0, "Tag_A")
CollectionService:AddTag(instance0, "Tag_B")

print(CollectionService:GetTags(instance0)) --> {"Tag_A", "Tag_B"}

CollectionService:RemoveTag(instance0, "Tag_A")

print(CollectionService:GetTags(instance0)) --> {"Tag_B"}


-- :HasTag()
-- Returns bool depending on whether the given tag is present or now
CollectionService:AddTag(instance0, "Tag_B")

if CollectionService:HasTag(instance0, "Tag_B") then
  print("Tag B is present")
else
  print("Tag B is NOT present")
end


-- :GetInstanceAddedSignal() and :GetInstanceRemovedSignal()
-- Fire callback function when an instance is given/removed a specific tag
CollectionService:GetInstanceAddedSignal("Tag_A"):Connect(function(instance)
  print(instance.Name.." marked as Tag_A")
end)

CollectionService:GetInstanceRemovedSignal("Tag_A"):Connect(function(instance)
  print(instance.Name.." unmarked as Tag_A") 
end)

CollectionService:AddTag(instance0, "Tag_A") --> "instance0 marked as Tag_A"
CollectionService:RemoveTag(instance0, "Tag_A") --> "instance0 unmarked as Tag_A"]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a9000049bb</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX9919F6CF1FBE41C580C908CF124546E5">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">KillerBricks</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{E6AFED6A-79F5-4F7D-8C04-73A7D21D24EA}</string>
					<ProtectedString name="Source"><![CDATA[local CollectionService = game:GetService("CollectionService")

-- Begin by looping through the parts tagged as "Killer"
for _, part in pairs(CollectionService:GetTagged("Killer")) do
  -- Bind those killer parts to a function that fires on touch
  part.Touched:Connect(function(hit)
    if hit.Parent:FindFirstChild("Humanoid") then
      local Humanoid = hit.Parent.Humanoid
      Humanoid.Health = 0 
    end
  end)
end]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a9000049c1</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBXAD883CBDE2DC42DDBF3E62D0B8BF0AB0">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">true</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RbxUtilsExample</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{DC8CA6DE-DF80-4503-8AAD-2E77F1CC74CA}</string>
					<ProtectedString name="Source"><![CDATA[-- Reference folder with packages
local Packages = game:GetService("ReplicatedStorage").Packages

-- Require the utility modules
local Signal = require(Packages.Signal)
local TableUtil = require(Packages.TableUtil)

-- Use the modules
-- Effectively shuffles a given array
local signal = Signal.new()

signal:Connect(function(data)
  local randomizedData = TableUtil.Shuffle(data)
  print(randomizedData)
end)

signal:Fire({"A", "B", "C"})]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900004c2d</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBXAD03BC092E04434D9AC3DEC9FB5729F5">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ObserversExample</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{AE326AFA-7658-44E2-84B2-1FE89045843A}</string>
					<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Observers = require(ReplicatedStorage.Packages.Observers)

-- Observe mesh instances with the "Disco" tag
Observers.observeTag("Disco", function(part: MeshPart)
  -- Spawn a thread that changes the color every 0.2 seconds:
  local discoThread = task.spawn(function()
    while true do
      task.wait(0.2)
      part.Color = Color3.new(math.random(), math.random(), math.random())
      part.Rotation = Vector3.new(math.random()*360, math.random()*360, math.random()*360)
    end
  end)

  -- Close the disco thread once the tag or instance is removed:
  return function()
    task.cancel(discoThread)
  end
end)]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005a68</UniqueId>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="ServerStorage" referent="RBXB843735163894020ACD9FAF59241140E">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ServerStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a90000034f</UniqueId>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="1">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ReplicatedStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000350</UniqueId>
		</Properties>
		<Item class="Folder" referent="2">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Shared</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900003dcc</UniqueId>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX63ACD388DAE5418AB58B57DB0B1F1739">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Packages</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900004bdf</UniqueId>
			</Properties>
			<Item class="ModuleScript" referent="RBX7A0DD345CDEE4C1F9970930F6B26599A">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Signal</string>
					<string name="ScriptGuid">{4761C440-27AE-44A1-91EA-3C6F7A81F61B}</string>
					<ProtectedString name="Source">return require(script.Parent._Index[&quot;sleitnick_signal@1.5.0&quot;][&quot;signal&quot;])</ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900004be0</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXB9DFB8E17DA343EEBBB3203C102C41F7">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">TableUtil</string>
					<string name="ScriptGuid">{8E9A257A-D771-4FA9-95B5-3252B50498C5}</string>
					<ProtectedString name="Source">return require(script.Parent._Index[&quot;sleitnick_table-util@1.2.1&quot;][&quot;table-util&quot;])</ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900004be1</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX73CD8EDF5E4F42099386146C7AE2AB42">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Observers</string>
					<string name="ScriptGuid">{0016FAEC-5AED-4EA5-9C87-BA6A699F83AF}</string>
					<ProtectedString name="Source">return require(script.Parent._Index[&quot;sleitnick_observers@0.3.3&quot;][&quot;observers&quot;])</ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a9000059bd</UniqueId>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBX90670B9F384D4FDCB615A8351218F52C">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">_Index</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005a10</UniqueId>
				</Properties>
				<Item class="Folder" referent="RBXCB37528B9E1D45D19182E36131AFEE8F">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">sleitnick_observers@0.3.3</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005a11</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBXA82CF4F3DE0C4C6BB432E639E765A3BC">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">observers</string>
							<string name="ScriptGuid">{CA9A6D21-4EC9-4043-8E6A-2F502F6956F1}</string>
							<ProtectedString name="Source"><![CDATA[--!strict

--[=[
	@class Observers

	A collection of observer utility functions.
]=]

return {
	observeTag = require(script.observeTag),
	observeAttribute = require(script.observeAttribute),
	observeProperty = require(script.observeProperty),
	observePlayer = require(script.observePlayer),
	observeCharacter = require(script.observeCharacter),
}]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005a12</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX415845868DDE4C9EAF9E6436906D61E5">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">observeAttribute</string>
								<string name="ScriptGuid">{BC084C07-6E61-4BD3-AFDC-99536D4D7BCC}</string>
								<ProtectedString name="Source"><![CDATA[--!strict

export type AttributeValue =
	string
	| boolean
	| number
	| UDim
	| UDim2
	| BrickColor
	| Color3
	| Vector2
	| Vector3
	| CFrame
	| NumberSequence
	| ColorSequence
	| NumberRange
	| Rect
	| Font

local function defaultGuard(_value: AttributeValue)
	return true
end

--[=[
	@within Observers

	Creates an observer around an attribute of a given instance. The callback will fire for any non-nil
	attribute value.

	```lua
	observeAttribute(workspace.Model, "MyAttribute", function(value)
		print("MyAttribute is now:", value)

		return function()
			-- Cleanup
			print("MyAttribute is no longer:", value)
		end
	end)
	```

	An optional `guard` predicate function can be supplied to further narrow which values trigger the observer.
	For instance, if only strings are wanted:

	```lua
	observeAttribute(
		workspace.Model,
		"MyAttribute",
		function(value) print("value is a string", value) end,
		function(value) return typeof(value) == "string" end
	)
	```

	The observer also returns a function that can be called to clean up the observer:
	```lua
	local stopObserving = observeAttribute(workspace.Model, "MyAttribute", function(value) ... end)

	task.wait(10)
	stopObserving()
	```
]=]
local function observeAttribute(
	instance: Instance,
	name: string,
	callback: (value: AttributeValue) -> () -> (),
	guard: ((value: AttributeValue) -> boolean)?
): () -> ()
	local cleanFn: (() -> ())? = nil

	local onAttrChangedConn: RBXScriptConnection
	local changedId = 0

	local valueGuard: (value: AttributeValue) -> boolean = if guard ~= nil then guard else defaultGuard

	local function OnAttributeChanged()
		if cleanFn ~= nil then
			task.spawn(cleanFn)
			cleanFn = nil
		end

		changedId += 1
		local id = changedId

		local value = instance:GetAttribute(name)

		if value ~= nil and valueGuard(value) then
			task.spawn(function()
				local clean = callback(value)
				if id == changedId and onAttrChangedConn.Connected then
					cleanFn = clean
				else
					task.spawn(clean)
				end
			end)
		end
	end

	-- Get changed values:
	onAttrChangedConn = instance:GetAttributeChangedSignal(name):Connect(OnAttributeChanged)

	-- Get initial value:
	task.defer(function()
		if not onAttrChangedConn.Connected then
			return
		end

		OnAttributeChanged()
	end)

	-- Cleanup:
	return function()
		onAttrChangedConn:Disconnect()
		if cleanFn ~= nil then
			task.spawn(cleanFn)
			cleanFn = nil
		end
	end
end

return observeAttribute]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005a13</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX0D86DECF9D9D4D169B77B2813498C696">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">observeCharacter</string>
								<string name="ScriptGuid">{DA7D8342-0646-4B1F-A191-B7AB597ADAE7}</string>
								<ProtectedString name="Source"><![CDATA[--!strict

local observePlayer = require(script.Parent.observePlayer)

--[=[
	@within Observers

	Creates an observer that captures each character in the game.

	```lua
	observeCharacter(function(player, character)
		print("Character spawned for " .. player.Name)

		return function()
			-- Cleanup
			print("Character removed for " .. player.Name)
		end
	end)
	```
]=]
local function observeCharacter(callback: (player: Player, character: Model) -> (() -> ())?): () -> ()
	return observePlayer(function(player)
		local cleanupFn: (() -> ())? = nil

		local characterAddedConn: RBXScriptConnection

		local function OnCharacterAdded(character: Model)
			local currentCharCleanup: (() -> ())? = nil

			-- Call the callback:
			task.defer(function()
				local cleanup = callback(player, character)
				-- If a cleanup function is given, save it for later:
				if typeof(cleanup) == "function" then
					if characterAddedConn.Connected and character.Parent then
						currentCharCleanup = cleanup
						cleanupFn = cleanup
					else
						-- Character is already gone or observer has stopped; call cleanup immediately:
						task.spawn(cleanup)
					end
				end
			end)

			-- Watch for the character to be removed from the game hierarchy:
			local ancestryChangedConn: RBXScriptConnection
			ancestryChangedConn = character.AncestryChanged:Connect(function(_, newParent)
				if newParent == nil and ancestryChangedConn.Connected then
					ancestryChangedConn:Disconnect()
					if currentCharCleanup ~= nil then
						task.spawn(currentCharCleanup)
						if cleanupFn == currentCharCleanup then
							cleanupFn = nil
						end
						currentCharCleanup = nil
					end
				end
			end)
		end

		-- Handle character added:
		characterAddedConn = player.CharacterAdded:Connect(OnCharacterAdded)

		-- Handle initial character:
		task.defer(function()
			if player.Character and characterAddedConn.Connected then
				task.spawn(OnCharacterAdded, player.Character)
			end
		end)

		-- Cleanup:
		return function()
			characterAddedConn:Disconnect()
			if cleanupFn ~= nil then
				task.spawn(cleanupFn)
				cleanupFn = nil
			end
		end
	end)
end

return observeCharacter]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005a14</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX1F580629A4B744E58E7BF90B34C0FA71">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">observePlayer</string>
								<string name="ScriptGuid">{1D3E6674-39D2-465A-BFDB-F56C88FB7320}</string>
								<ProtectedString name="Source"><![CDATA[--!strict

local Players = game:GetService("Players")

--[=[
	@within Observers

	Creates an observer that captures each player in the game.

	```lua
	observePlayer(function(player)
		print("Player entered game", player.Name)

		return function()
			-- Cleanup
			print("Player left game (or observer stopped)", player.Name)
		end
	end)
	```
]=]
local function observePlayer(callback: (player: Player) -> (() -> ())?): () -> ()
	local playerAddedConn: RBXScriptConnection
	local playerRemovingConn: RBXScriptConnection

	local cleanupsPerPlayer: { [Player]: () -> () } = {}

	local function OnPlayerAdded(player: Player)
		if not playerAddedConn.Connected then
			return
		end

		task.spawn(function()
			local cleanup = callback(player)
			if typeof(cleanup) == "function" then
				if playerAddedConn.Connected and player.Parent then
					cleanupsPerPlayer[player] = cleanup
				else
					task.spawn(cleanup)
				end
			end
		end)
	end

	local function OnPlayerRemoving(player: Player)
		local cleanup = cleanupsPerPlayer[player]
		cleanupsPerPlayer[player] = nil
		if typeof(cleanup) == "function" then
			task.spawn(cleanup)
		end
	end

	-- Listen for changes:
	playerAddedConn = Players.PlayerAdded:Connect(OnPlayerAdded)
	playerRemovingConn = Players.PlayerRemoving:Connect(OnPlayerRemoving)

	-- Initial:
	task.defer(function()
		if not playerAddedConn.Connected then
			return
		end

		for _, player in Players:GetPlayers() do
			task.spawn(OnPlayerAdded, player)
		end
	end)

	-- Cleanup:
	return function()
		playerAddedConn:Disconnect()
		playerRemovingConn:Disconnect()

		local player = next(cleanupsPerPlayer)
		while player do
			OnPlayerRemoving(player)
			player = next(cleanupsPerPlayer)
		end
	end
end

return observePlayer]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005a15</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX8331BAE05BF54CF7846E1742C21831DD">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">observeProperty</string>
								<string name="ScriptGuid">{13CEBE46-2C00-4BFD-9A2D-BAB184D001FB}</string>
								<ProtectedString name="Source"><![CDATA[--!strict

--[=[
	@within Observers

	Creates an observer around a property of a given instance.

	```lua
	observeProperty(workspace.Model, "Name", function(newName: string)
		print("New name:", name)

		return function()
			-- Cleanup
			print("Model's name is no longer:", name)
		end
	end)
	```
]=]
local function observeProperty(instance: Instance, property: string, callback: (value: unknown) -> () -> ()): () -> ()
	local cleanFn: (() -> ())? = nil

	local propChangedConn: RBXScriptConnection
	local changedId = 0

	local function OnPropertyChanged()
		if cleanFn ~= nil then
			task.spawn(cleanFn)
			cleanFn = nil
		end

		changedId += 1
		local id = changedId

		local value = (instance :: any)[property]

		task.spawn(function()
			local clean = callback(value)
			if id == changedId and propChangedConn.Connected then
				cleanFn = clean
			else
				task.spawn(clean)
			end
		end)
	end

	-- Get changed values:
	propChangedConn = instance:GetPropertyChangedSignal(property):Connect(OnPropertyChanged)

	-- Get initial value:
	task.defer(function()
		if not propChangedConn.Connected then
			return
		end
		OnPropertyChanged()
	end)

	-- Cleanup:
	return function()
		propChangedConn:Disconnect()
		if cleanFn ~= nil then
			task.spawn(cleanFn)
			cleanFn = nil
		end
	end
end

return observeProperty]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005a16</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXC953391E944847C7A5B400DD4CD65011">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">observeTag</string>
								<string name="ScriptGuid">{D7A5A87B-E208-46C2-B142-D1A2D3E53242}</string>
								<ProtectedString name="Source"><![CDATA[--!strict

local CollectionService = game:GetService("CollectionService")

type InstanceStatus = "__inflight__" | "__dead__"

--[=[
	@within Observers

	Creates an observer around a CollectionService tag. The given callback will fire for each instance
	that has the given tag.

	The callback should return a function, which will be called when the given instance's tag is either
	destroyed, loses the given tag, or (if the `ancestors` table is provided) goes outside of the allowed
	ancestors.

	The function itself returns a function that can be called to stop the observer. This will also call
	any cleanup functions of currently-observed instances.

	```lua
	local stopObserver = Observers.observeTag("MyTag", function(instance: Instance)
		print("Observing", instance)

		-- The "cleanup" function:
		return function()
			print("Stopped observing", instance)
		end
	end)

	-- Optionally, the `stopObserver` function can be called to completely stop the observer:
	task.wait(10)
	stopObserver()
	```

	#### Ancestor Inclusion List
	By default, the `observeTag` function will observe a tagged instance anywhere in the Roblox game
	hierarchy. The `ancestors` table can optionally be used, which will restrict the observer to only
	observe tagged instances that are descendants of instances within the `ancestors` table.

	For instance, if a tagged instance should only be observed when it is in the Workspace, the Workspace
	can be added to the `ancestors` list. This might be useful if a tagged model prefab exist somewhere
	such as ServerStorage, but shouldn't be observed until placed into the Workspace.

	```lua
	local allowedAncestors = { workspace }

	Observers.observeTag(
		"MyTag",
		function(instance: Instance)
			...
		end,
		allowedAncestors
	)
	```
]=]
function observeTag<T>(tag: string, callback: (instance: T) -> () -> (), ancestors: { Instance }?): () -> ()
	local instances: { [Instance]: InstanceStatus | () -> () } = {}
	local ancestryConn: { [Instance]: RBXScriptConnection } = {}

	local onInstAddedConn: RBXScriptConnection
	local onInstRemovedConn: RBXScriptConnection

	local function IsGoodAncestor(instance: Instance)
		if ancestors == nil then
			return true
		end

		for _, ancestor in ancestors do
			if instance:IsDescendantOf(ancestor) then
				return true
			end
		end

		return false
	end

	local function AttemptStartup(instance: Instance)
		-- Mark instance as starting up:
		instances[instance] = "__inflight__"

		-- Attempt to run the callback:
		task.defer(function()
			if instances[instance] ~= "__inflight__" then
				return
			end

			-- Run the callback in protected mode:
			local success, cleanup = xpcall(function(inst: T)
				local clean = callback(inst)
				assert(typeof(clean) == "function", "callback must return a function")
				return clean
			end, debug.traceback, instance :: any)

			-- If callback errored, print out the traceback:
			if not success then
				local err = ""
				local firstLine = string.split(cleanup :: any, "\n")[1]
				local lastColon = string.find(firstLine, ": ")
				if lastColon then
					err = firstLine:sub(lastColon + 1)
				end
				warn(`error while calling observeTag("{tag}") callback:{err}\n{cleanup}`)
				return
			end

			if instances[instance] ~= "__inflight__" then
				-- Instance lost its tag or was destroyed before callback completed; call cleanup immediately:
				task.spawn(cleanup :: any)
			else
				-- Good startup; mark the instance with the associated cleanup function:
				instances[instance] = cleanup :: any
			end
		end)
	end

	local function AttemptCleanup(instance: Instance)
		local cleanup = instances[instance]
		instances[instance] = "__dead__"

		if typeof(cleanup) == "function" then
			task.spawn(cleanup)
		end
	end

	local function OnAncestryChanged(instance: Instance)
		if IsGoodAncestor(instance) then
			if instances[instance] == "__dead__" then
				AttemptStartup(instance)
			end
		else
			AttemptCleanup(instance)
		end
	end

	local function OnInstanceAdded(instance: Instance)
		if not onInstAddedConn.Connected then
			return
		end
		if instances[instance] ~= nil then
			return
		end

		instances[instance] = "__dead__"

		ancestryConn[instance] = instance.AncestryChanged:Connect(function()
			OnAncestryChanged(instance)
		end)
		OnAncestryChanged(instance)
	end

	local function OnInstanceRemoved(instance: Instance)
		AttemptCleanup(instance)

		local ancestry = ancestryConn[instance]
		if ancestry then
			ancestry:Disconnect()
			ancestryConn[instance] = nil
		end

		instances[instance] = nil
	end

	-- Hook up added/removed listeners for the given tag:
	onInstAddedConn = CollectionService:GetInstanceAddedSignal(tag):Connect(OnInstanceAdded)
	onInstRemovedConn = CollectionService:GetInstanceRemovedSignal(tag):Connect(OnInstanceRemoved)

	-- Attempt to mark already-existing tagged instances right away:
	task.defer(function()
		if not onInstAddedConn.Connected then
			return
		end

		for _, instance in CollectionService:GetTagged(tag) do
			task.spawn(OnInstanceAdded, instance)
		end
	end)

	-- Full observer cleanup function:
	return function()
		onInstAddedConn:Disconnect()
		onInstRemovedConn:Disconnect()

		-- Clear all instances:
		local instance = next(instances)
		while instance do
			OnInstanceRemoved(instance)
			instance = next(instances)
		end
	end
end

return observeTag]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005a17</UniqueId>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX6F959160CBBE40C0A93EF68935AF1576">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">sleitnick_signal@1.5.0</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005a18</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX0F34ABE98C394FFE9ECD971A3E21E8BD">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">signal</string>
							<string name="ScriptGuid">{0FEA6C94-DBCB-4103-AF94-E07423E4E5EA}</string>
							<ProtectedString name="Source"><![CDATA[-- -----------------------------------------------------------------------------
--               Batched Yield-Safe Signal Implementation                     --
-- This is a Signal class which has effectively identical behavior to a       --
-- normal RBXScriptSignal, with the only difference being a couple extra      --
-- stack frames at the bottom of the stack trace when an error is thrown.     --
-- This implementation caches runner coroutines, so the ability to yield in   --
-- the signal handlers comes at minimal extra cost over a naive signal        --
-- implementation that either always or never spawns a thread.                --
--                                                                            --
-- API:                                                                       --
--   local Signal = require(THIS MODULE)                                      --
--   local sig = Signal.new()                                                 --
--   local connection = sig:Connect(function(arg1, arg2, ...) ... end)        --
--   sig:Fire(arg1, arg2, ...)                                                --
--   connection:Disconnect()                                                  --
--   sig:DisconnectAll()                                                      --
--   local arg1, arg2, ... = sig:Wait()                                       --
--                                                                            --
-- License:                                                                   --
--   Licensed under the MIT license.                                          --
--                                                                            --
-- Authors:                                                                   --
--   stravant - July 31st, 2021 - Created the file.                           --
--   sleitnick - August 3rd, 2021 - Modified for Knit.                        --
-- -----------------------------------------------------------------------------

-- Signal types
export type Connection = {
	Disconnect: (self: Connection) -> (),
	Destroy: (self: Connection) -> (),
	Connected: boolean,
}

export type Signal<T...> = {
	Fire: (self: Signal<T...>, T...) -> (),
	FireDeferred: (self: Signal<T...>, T...) -> (),
	Connect: (self: Signal<T...>, fn: (T...) -> ()) -> Connection,
	Once: (self: Signal<T...>, fn: (T...) -> ()) -> Connection,
	DisconnectAll: (self: Signal<T...>) -> (),
	GetConnections: (self: Signal<T...>) -> { Connection },
	Destroy: (self: Signal<T...>) -> (),
	Wait: (self: Signal<T...>) -> T...,
}

-- The currently idle thread to run the next handler on
local freeRunnerThread = nil

-- Function which acquires the currently idle handler runner thread, runs the
-- function fn on it, and then releases the thread, returning it to being the
-- currently idle one.
-- If there was a currently idle runner thread already, that's okay, that old
-- one will just get thrown and eventually GCed.
local function acquireRunnerThreadAndCallEventHandler(fn, ...)
	local acquiredRunnerThread = freeRunnerThread
	freeRunnerThread = nil
	fn(...)
	-- The handler finished running, this runner thread is free again.
	freeRunnerThread = acquiredRunnerThread
end

-- Coroutine runner that we create coroutines of. The coroutine can be
-- repeatedly resumed with functions to run followed by the argument to run
-- them with.
local function runEventHandlerInFreeThread(...)
	acquireRunnerThreadAndCallEventHandler(...)
	while true do
		acquireRunnerThreadAndCallEventHandler(coroutine.yield())
	end
end

--[=[
	@within Signal
	@interface SignalConnection
	.Connected boolean
	.Disconnect (SignalConnection) -> ()

	Represents a connection to a signal.
	```lua
	local connection = signal:Connect(function() end)
	print(connection.Connected) --> true
	connection:Disconnect()
	print(connection.Connected) --> false
	```
]=]

-- Connection class
local Connection = {}
Connection.__index = Connection

function Connection.new(signal, fn)
	return setmetatable({
		Connected = true,
		_signal = signal,
		_fn = fn,
		_next = false,
	}, Connection)
end

function Connection:Disconnect()
	if not self.Connected then
		return
	end
	self.Connected = false

	-- Unhook the node, but DON'T clear it. That way any fire calls that are
	-- currently sitting on this node will be able to iterate forwards off of
	-- it, but any subsequent fire calls will not hit it, and it will be GCed
	-- when no more fire calls are sitting on it.
	if self._signal._handlerListHead == self then
		self._signal._handlerListHead = self._next
	else
		local prev = self._signal._handlerListHead
		while prev and prev._next ~= self do
			prev = prev._next
		end
		if prev then
			prev._next = self._next
		end
	end
end

Connection.Destroy = Connection.Disconnect

-- Make Connection strict
setmetatable(Connection, {
	__index = function(_tb, key)
		error(("Attempt to get Connection::%s (not a valid member)"):format(tostring(key)), 2)
	end,
	__newindex = function(_tb, key, _value)
		error(("Attempt to set Connection::%s (not a valid member)"):format(tostring(key)), 2)
	end,
})

--[=[
	@within Signal
	@type ConnectionFn (...any) -> ()

	A function connected to a signal.
]=]

--[=[
	@class Signal

	Signals allow events to be dispatched and handled.

	For example:
	```lua
	local signal = Signal.new()

	signal:Connect(function(msg)
		print("Got message:", msg)
	end)

	signal:Fire("Hello world!")
	```
]=]
local Signal = {}
Signal.__index = Signal

--[=[
	Constructs a new Signal

	@return Signal
]=]
function Signal.new<T...>(): Signal<T...>
	local self = setmetatable({
		_handlerListHead = false,
		_proxyHandler = nil,
	}, Signal)
	return self
end

--[=[
	Constructs a new Signal that wraps around an RBXScriptSignal.

	@param rbxScriptSignal RBXScriptSignal -- Existing RBXScriptSignal to wrap
	@return Signal

	For example:
	```lua
	local signal = Signal.Wrap(workspace.ChildAdded)
	signal:Connect(function(part) print(part.Name .. " added") end)
	Instance.new("Part").Parent = workspace
	```
]=]
function Signal.Wrap<T...>(rbxScriptSignal: RBXScriptSignal): Signal<T...>
	assert(
		typeof(rbxScriptSignal) == "RBXScriptSignal",
		"Argument #1 to Signal.Wrap must be a RBXScriptSignal; got " .. typeof(rbxScriptSignal)
	)
	local signal = Signal.new()
	signal._proxyHandler = rbxScriptSignal:Connect(function(...)
		signal:Fire(...)
	end)
	return signal
end

--[=[
	Checks if the given object is a Signal.

	@param obj any -- Object to check
	@return boolean -- `true` if the object is a Signal.
]=]
function Signal.Is(obj: any): boolean
	return type(obj) == "table" and getmetatable(obj) == Signal
end

--[=[
	@param fn ConnectionFn
	@return SignalConnection

	Connects a function to the signal, which will be called anytime the signal is fired.
	```lua
	signal:Connect(function(msg, num)
		print(msg, num)
	end)

	signal:Fire("Hello", 25)
	```
]=]
function Signal:Connect(fn)
	local connection = Connection.new(self, fn)
	if self._handlerListHead then
		connection._next = self._handlerListHead
		self._handlerListHead = connection
	else
		self._handlerListHead = connection
	end
	return connection
end

--[=[
	@deprecated v1.3.0 -- Use `Signal:Once` instead.
	@param fn ConnectionFn
	@return SignalConnection
]=]
function Signal:ConnectOnce(fn)
	return self:Once(fn)
end

--[=[
	@param fn ConnectionFn
	@return SignalConnection

	Connects a function to the signal, which will be called the next time the signal fires. Once
	the connection is triggered, it will disconnect itself.
	```lua
	signal:Once(function(msg, num)
		print(msg, num)
	end)

	signal:Fire("Hello", 25)
	signal:Fire("This message will not go through", 10)
	```
]=]
function Signal:Once(fn)
	local connection
	local done = false
	connection = self:Connect(function(...)
		if done then
			return
		end
		done = true
		connection:Disconnect()
		fn(...)
	end)
	return connection
end

function Signal:GetConnections()
	local items = {}
	local item = self._handlerListHead
	while item do
		table.insert(items, item)
		item = item._next
	end
	return items
end

-- Disconnect all handlers. Since we use a linked list it suffices to clear the
-- reference to the head handler.
--[=[
	Disconnects all connections from the signal.
	```lua
	signal:DisconnectAll()
	```
]=]
function Signal:DisconnectAll()
	local item = self._handlerListHead
	while item do
		item.Connected = false
		item = item._next
	end
	self._handlerListHead = false
end

-- Signal:Fire(...) implemented by running the handler functions on the
-- coRunnerThread, and any time the resulting thread yielded without returning
-- to us, that means that it yielded to the Roblox scheduler and has been taken
-- over by Roblox scheduling, meaning we have to make a new coroutine runner.
--[=[
	@param ... any

	Fire the signal, which will call all of the connected functions with the given arguments.
	```lua
	signal:Fire("Hello")

	-- Any number of arguments can be fired:
	signal:Fire("Hello", 32, {Test = "Test"}, true)
	```
]=]
function Signal:Fire(...)
	local item = self._handlerListHead
	while item do
		if item.Connected then
			if not freeRunnerThread then
				freeRunnerThread = coroutine.create(runEventHandlerInFreeThread)
			end
			task.spawn(freeRunnerThread, item._fn, ...)
		end
		item = item._next
	end
end

--[=[
	@param ... any

	Same as `Fire`, but uses `task.defer` internally & doesn't take advantage of thread reuse.
	```lua
	signal:FireDeferred("Hello")
	```
]=]
function Signal:FireDeferred(...)
	local item = self._handlerListHead
	while item do
		task.defer(item._fn, ...)
		item = item._next
	end
end

--[=[
	@return ... any
	@yields

	Yields the current thread until the signal is fired, and returns the arguments fired from the signal.
	Yielding the current thread is not always desirable. If the desire is to only capture the next event
	fired, using `Once` might be a better solution.
	```lua
	task.spawn(function()
		local msg, num = signal:Wait()
		print(msg, num) --> "Hello", 32
	end)
	signal:Fire("Hello", 32)
	```
]=]
function Signal:Wait()
	local waitingCoroutine = coroutine.running()
	local connection
	local done = false
	connection = self:Connect(function(...)
		if done then
			return
		end
		done = true
		connection:Disconnect()
		task.spawn(waitingCoroutine, ...)
	end)
	return coroutine.yield()
end

--[=[
	Cleans up the signal.

	Technically, this is only necessary if the signal is created using
	`Signal.Wrap`. Connections should be properly GC'd once the signal
	is no longer referenced anywhere. However, it is still good practice
	to include ways to strictly clean up resources. Calling `Destroy`
	on a signal will also disconnect all connections immediately.
	```lua
	signal:Destroy()
	```
]=]
function Signal:Destroy()
	self:DisconnectAll()
	local proxyHandler = rawget(self, "_proxyHandler")
	if proxyHandler then
		proxyHandler:Disconnect()
	end
end

-- Make signal strict
setmetatable(Signal, {
	__index = function(_tb, key)
		error(("Attempt to get Signal::%s (not a valid member)"):format(tostring(key)), 2)
	end,
	__newindex = function(_tb, key, _value)
		error(("Attempt to set Signal::%s (not a valid member)"):format(tostring(key)), 2)
	end,
})

return {
	new = Signal.new,
	Wrap = Signal.Wrap,
	Is = Signal.Is,
}]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005a19</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX5B5B3D4A431D4205986A354039500A2C">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">init.spec</string>
								<string name="ScriptGuid">{540D69D6-675E-4046-9133-8274B4F6F286}</string>
								<ProtectedString name="Source"><![CDATA[local function AwaitCondition(predicate, timeout)
	local start = os.clock()
	timeout = (timeout or 10)
	while true do
		if predicate() then
			return true
		end
		if (os.clock() - start) > timeout then
			return false
		end
		task.wait()
	end
end

return function()
	local Signal = require(script.Parent)

	local signal

	local function NumConns(sig)
		sig = sig or signal
		return #sig:GetConnections()
	end

	beforeEach(function()
		signal = Signal.new()
	end)

	afterEach(function()
		signal:Destroy()
	end)

	describe("Constructor", function()
		it("should create a new signal and fire it", function()
			expect(Signal.Is(signal)).to.equal(true)
			task.defer(function()
				signal:Fire(10, 20)
			end)
			local n1, n2 = signal:Wait()
			expect(n1).to.equal(10)
			expect(n2).to.equal(20)
		end)

		it("should create a proxy signal and connect to it", function()
			local signalWrap = Signal.Wrap(game:GetService("RunService").Heartbeat)
			expect(Signal.Is(signalWrap)).to.equal(true)
			local fired = false
			signalWrap:Connect(function()
				fired = true
			end)
			expect(AwaitCondition(function()
				return fired
			end, 2)).to.equal(true)
			signalWrap:Destroy()
		end)
	end)

	describe("FireDeferred", function()
		it("should be able to fire primitive argument", function()
			local send = 10
			local value
			signal:Connect(function(v)
				value = v
			end)
			signal:FireDeferred(send)
			expect(AwaitCondition(function()
				return (send == value)
			end, 1)).to.equal(true)
		end)

		it("should be able to fire a reference based argument", function()
			local send = { 10, 20 }
			local value
			signal:Connect(function(v)
				value = v
			end)
			signal:FireDeferred(send)
			expect(AwaitCondition(function()
				return (send == value)
			end, 1)).to.equal(true)
		end)
	end)

	describe("Fire", function()
		it("should be able to fire primitive argument", function()
			local send = 10
			local value
			signal:Connect(function(v)
				value = v
			end)
			signal:Fire(send)
			expect(value).to.equal(send)
		end)

		it("should be able to fire a reference based argument", function()
			local send = { 10, 20 }
			local value
			signal:Connect(function(v)
				value = v
			end)
			signal:Fire(send)
			expect(value).to.equal(send)
		end)
	end)

	describe("ConnectOnce", function()
		it("should only capture first fire", function()
			local value
			local c = signal:ConnectOnce(function(v)
				value = v
			end)
			expect(c.Connected).to.equal(true)
			signal:Fire(10)
			expect(c.Connected).to.equal(false)
			signal:Fire(20)
			expect(value).to.equal(10)
		end)
	end)

	describe("Wait", function()
		it("should be able to wait for a signal to fire", function()
			task.defer(function()
				signal:Fire(10, 20, 30)
			end)
			local n1, n2, n3 = signal:Wait()
			expect(n1).to.equal(10)
			expect(n2).to.equal(20)
			expect(n3).to.equal(30)
		end)
	end)

	describe("DisconnectAll", function()
		it("should disconnect all connections", function()
			signal:Connect(function() end)
			signal:Connect(function() end)
			expect(NumConns()).to.equal(2)
			signal:DisconnectAll()
			expect(NumConns()).to.equal(0)
		end)
	end)

	describe("Disconnect", function()
		it("should disconnect connection", function()
			local con = signal:Connect(function() end)
			expect(NumConns()).to.equal(1)
			con:Disconnect()
			expect(NumConns()).to.equal(0)
		end)

		it("should still work if connections disconnected while firing", function()
			local a = 0
			local c
			signal:Connect(function()
				a += 1
			end)
			c = signal:Connect(function()
				c:Disconnect()
				a += 1
			end)
			signal:Connect(function()
				a += 1
			end)
			signal:Fire()
			expect(a).to.equal(3)
		end)

		it("should still work if connections disconnected while firing deferred", function()
			local a = 0
			local c
			signal:Connect(function()
				a += 1
			end)
			c = signal:Connect(function()
				c:Disconnect()
				a += 1
			end)
			signal:Connect(function()
				a += 1
			end)
			signal:FireDeferred()
			expect(AwaitCondition(function()
				return a == 3
			end)).to.equal(true)
		end)
	end)
end]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005a1a</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX93A644D7E5C94DA0857160742F3298E2">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">wally</string>
								<string name="ScriptGuid">{982A38DE-1460-4728-BCD6-47AD4F0D94A0}</string>
								<ProtectedString name="Source"><![CDATA[return {
	package = {
		authors = {"Stephen Leitnick"},
		description = "Signal class",
		license = "MIT",
		name = "sleitnick/signal",
		realm = "shared",
		registry = "https://github.com/UpliftGames/wally-index",
		version = "1.5.0",
	},
}]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005a1b</UniqueId>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Folder" referent="RBXE4318215DA014025BAD2B603703415BA">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">sleitnick_table-util@1.2.1</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005a1c</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBXB8EF33434A7B4ABFAC3646C4C83456F1">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">table-util</string>
							<string name="ScriptGuid">{83CAEE0A-B3EA-4BDD-A4C8-32CB75D1A3F9}</string>
							<ProtectedString name="Source"><![CDATA[--!strict

-- TableUtil
-- Stephen Leitnick
-- September 13, 2017

--[=[
	@class TableUtil

	A collection of helpful table utility functions. Many of these functions are carried over from JavaScript or
	Python that are not present in Lua.

	Tables that only work specifically with arrays or dictionaries are marked as such in the documentation.

	:::info Immutability
	All functions (_except_ `SwapRemove`, `SwapRemoveFirstValue`, and `Lock`) treat tables as immutable and will return
	copies of the given table(s) with the operations performed on the copies.
]=]
local TableUtil = {}

local HttpService = game:GetService("HttpService")
local rng = Random.new()

--[=[
	@within TableUtil
	@function Copy
	@param tbl table -- Table to copy
	@param deep boolean? -- Whether or not to perform a deep copy
	@return table

	Creates a copy of the given table. By default, a shallow copy is
	performed. For deep copies, a second boolean argument must be
	passed to the function.

	:::caution No cyclical references
	Deep copies are _not_ protected against cyclical references. Passing
	a table with cyclical references _and_ the `deep` parameter set to
	`true` will result in a stack-overflow.
]=]
local function Copy<T>(t: T, deep: boolean?): T
	if not deep then
		return (table.clone(t :: any) :: any) :: T
	end
	local function DeepCopy(tbl: { any })
		local tCopy = table.clone(tbl)
		for k, v in tCopy do
			if type(v) == "table" then
				tCopy[k] = DeepCopy(v)
			end
		end
		return tCopy
	end
	return DeepCopy(t :: any) :: T
end

--[=[
	@within TableUtil
	@function Sync
	@param srcTbl table -- Source table
	@param templateTbl table -- Template table
	@return table

	Synchronizes the `srcTbl` based on the `templateTbl`. This will make
	sure that `srcTbl` has all of the same keys as `templateTbl`, including
	removing keys in `srcTbl` that are not present in `templateTbl`. This
	is a _deep_ operation, so any nested tables will be synchronized as
	well.

	```lua
	local template = {kills = 0, deaths = 0, xp = 0}
	local data = {kills = 10, experience = 12}
	data = TableUtil.Sync(data, template)
	print(data) --> {kills = 10, deaths = 0, xp = 0}
	```

	:::caution Data Loss Warning
	This is a two-way sync, so the source table will have data
	_removed_ that isn't found in the template table. This can
	be problematic if used for player data, where there might
	be dynamic data added that isn't in the template.

	For player data, use `TableUtil.Reconcile` instead.
]=]
local function Sync<S, T>(srcTbl: S, templateTbl: T): T
	assert(type(srcTbl) == "table", "First argument must be a table")
	assert(type(templateTbl) == "table", "Second argument must be a table")

	local tbl = table.clone(srcTbl)

	-- If 'tbl' has something 'templateTbl' doesn't, then remove it from 'tbl'
	-- If 'tbl' has something of a different type than 'templateTbl', copy from 'templateTbl'
	-- If 'templateTbl' has something 'tbl' doesn't, then add it to 'tbl'
	for k, v in pairs(tbl) do
		local vTemplate = templateTbl[k]

		-- Remove keys not within template:
		if vTemplate == nil then
			tbl[k] = nil

			-- Synchronize data types:
		elseif type(v) ~= type(vTemplate) then
			if type(vTemplate) == "table" then
				tbl[k] = Copy(vTemplate, true)
			else
				tbl[k] = vTemplate
			end

			-- Synchronize sub-tables:
		elseif type(v) == "table" then
			tbl[k] = Sync(v, vTemplate)
		end
	end

	-- Add any missing keys:
	for k, vTemplate in pairs(templateTbl) do
		local v = tbl[k]

		if v == nil then
			if type(vTemplate) == "table" then
				tbl[k] = Copy(vTemplate, true)
			else
				tbl[k] = vTemplate
			end
		end
	end

	return (tbl :: any) :: T
end

--[=[
	@within TableUtil
	@function Reconcile
	@param source table
	@param template table
	@return table

	Performs a one-way sync on the `source` table against the
	`template` table. Any keys found in `template` that are
	not found in `source` will be added to `source`. This is
	useful for syncing player data against data template tables
	to ensure players have all the necessary keys, while
	maintaining existing keys that may no longer be in the
	template.

	This is a deep operation, so nested tables will also be
	properly reconciled.

	```lua
	local template = {kills = 0, deaths = 0, xp = 0}
	local data = {kills = 10, abc = 20}
	local correctedData = TableUtil.Reconcile(data, template)
	
	print(correctedData) --> {kills = 10, deaths = 0, xp = 0, abc = 20}
	```
]=]
local function Reconcile<S, T>(src: S, template: T): S & T
	assert(type(src) == "table", "First argument must be a table")
	assert(type(template) == "table", "Second argument must be a table")

	local tbl = table.clone(src)

	for k, v in template do
		local sv = src[k]
		if sv == nil then
			if type(v) == "table" then
				tbl[k] = Copy(v, true)
			else
				tbl[k] = v
			end
		elseif type(sv) == "table" then
			if type(v) == "table" then
				tbl[k] = Reconcile(sv, v)
			else
				tbl[k] = Copy(sv, true)
			end
		end
	end

	return (tbl :: any) :: S & T
end

--[=[
	@within TableUtil
	@function SwapRemove
	@param tbl table -- Array
	@param i number -- Index

	Removes index `i` in the table by swapping the value at `i` with
	the last value in the array, and then trimming off the last
	value from the array.

	This allows removal of the value at `i` in `O(1)` time, but does
	not preserve array ordering. If a value needs to be removed from
	an array, but ordering of the array does not matter, using
	`SwapRemove` is always preferred over `table.remove`.

	In the following example, we remove "B" at index 2. SwapRemove does
	this by moving the last value "E" over top of "B", and then trimming
	off "E" at the end of the array:
	```lua
	local t = {"A", "B", "C", "D", "E"}
	TableUtil.SwapRemove(t, 2) -- Remove "B"
	print(t) --> {"A", "E", "C", "D"}
	```

	:::note Arrays only
	This function works on arrays, but not dictionaries.
]=]
local function SwapRemove<T>(t: { T }, i: number)
	local n = #t
	t[i] = t[n]
	t[n] = nil
end

--[=[
	@within TableUtil
	@function SwapRemoveFirstValue
	@param tbl table -- Array
	@param v any -- Value to find
	@return number?

	Performs `table.find(tbl, v)` to find the index of the given
	value, and then performs `TableUtil.SwapRemove` on that index.

	```lua
	local t = {"A", "B", "C", "D", "E"}
	TableUtil.SwapRemoveFirstValue(t, "C")
	print(t) --> {"A", "B", "E", "D"}
	```

	:::note Arrays only
	This function works on arrays, but not dictionaries.
]=]
local function SwapRemoveFirstValue<T>(t: { T }, v: T): number?
	local index: number? = table.find(t, v)
	if index then
		SwapRemove(t, index)
	end
	return index
end

--[=[
	@within TableUtil
	@function Map
	@param tbl table
	@param predicate (value: any, key: any, tbl: table) -> newValue: any
	@return table

	Performs a map operation against the given table, which can be used to
	map new values based on the old values at given keys/indices.

	For example:

	```lua
	local t = {A = 10, B = 20, C = 30}
	local t2 = TableUtil.Map(t, function(value)
		return value * 2
	end)
	print(t2) --> {A = 20, B = 40, C = 60}
	```
]=]
local function Map<T, M>(t: { T }, f: (T, number, { T }) -> M): { M }
	assert(type(t) == "table", "First argument must be a table")
	assert(type(f) == "function", "Second argument must be a function")
	local newT = table.create(#t)
	for k, v in t do
		newT[k] = f(v, k, t)
	end
	return newT
end

--[=[
	@within TableUtil
	@function Filter
	@param tbl table
	@param predicate (value: any, key: any, tbl: table) -> keep: boolean
	@return table

	Performs a filter operation against the given table, which can be used to
	filter out unwanted values from the table.

	For example:

	```lua
	local t = {A = 10, B = 20, C = 30}
	local t2 = TableUtil.Filter(t, function(value, key)
		return value > 15
	end)
	print(t2) --> {B = 40, C = 60}
	```
]=]
local function Filter<T>(t: { T }, predicate: (T, any, { T }) -> boolean): { T }
	assert(type(t) == "table", "First argument must be a table")
	assert(type(predicate) == "function", "Second argument must be a function")
	local newT = table.create(#t)
	if #t > 0 then
		local n = 0
		for i, v in t do
			if predicate(v, i, t) then
				n += 1
				newT[n] = v
			end
		end
	else
		for k, v in t do
			if predicate(v, k, t) then
				newT[k] = v
			end
		end
	end
	return newT
end

--[=[
	@within TableUtil
	@function Reduce
	@param tbl table
	@param predicate (accumulator: any, value: any, index: any, tbl: table) -> result: any
	@return table

	Performs a reduce operation against the given table, which can be used to
	reduce the table into a single value. This could be used to sum up a table
	or transform all the values into a compound value of any kind.

	For example:

	```lua
	local t = {10, 20, 30, 40}
	local result = TableUtil.Reduce(t, function(accum, value)
		return accum + value
	end)
	print(result) --> 100
	```
]=]
local function Reduce<T, R>(t: { T }, predicate: (R, T, any, { T }) -> R, init: R): R
	assert(type(t) == "table", "First argument must be a table")
	assert(type(predicate) == "function", "Second argument must be a function")
	local result = init :: R
	if #t > 0 then
		local start = 1
		if init == nil then
			result = (t[1] :: any) :: R
			start = 2
		end
		for i = start, #t do
			result = predicate(result, t[i], i, t)
		end
	else
		local start = nil
		if init == nil then
			result = (next(t) :: any) :: R
			start = result
		end
		for k, v in next, t, start :: any? do
			result = predicate(result, v, k, t)
		end
	end
	return result
end

--[=[
	@within TableUtil
	@function Assign
	@param target table
	@param ... table
	@return table

	Copies all values of the given tables into the `target` table.

	```lua
	local t = {A = 10}
	local t2 = {B = 20}
	local t3 = {C = 30, D = 40}
	local newT = TableUtil.Assign(t, t2, t3)
	print(newT) --> {A = 10, B = 20, C = 30, D = 40}
	```
]=]
local function Assign<T>(target: { T }, ...: { any }): { T } & { any }
	local tbl = table.clone(target)
	for _, src in { ... } do
		for k, v in src do
			tbl[k] = v
		end
	end
	return tbl
end

--[=[
	@within TableUtil
	@function Extend
	@param target table
	@param extension table
	@return table

	Extends the target array with the extension array.

	```lua
	local t = {10, 20, 30}
	local t2 = {30, 40, 50}
	local tNew = TableUtil.Extend(t, t2)
	print(tNew) --> {10, 20, 30, 30, 40, 50}
	```

	:::note Arrays only
	This function works on arrays, but not dictionaries.
]=]
local function Extend<T, E>(target: { T }, extension: { E }): { T } & { E }
	local tbl = table.clone(target) :: { any }
	for _, v in extension do
		table.insert(tbl, v)
	end
	return tbl
end

--[=[
	@within TableUtil
	@function Reverse
	@param tbl table
	@return table

	Reverses the array.

	```lua
	local t = {1, 5, 10}
	local tReverse = TableUtil.Reverse(t)
	print(tReverse) --> {10, 5, 1}
	```

	:::note Arrays only
	This function works on arrays, but not dictionaries.
]=]
local function Reverse<T>(tbl: { T }): { T }
	local n = #tbl
	local tblRev = table.create(n)
	for i = 1, n do
		tblRev[i] = tbl[n - i + 1]
	end
	return tblRev
end

--[=[
	@within TableUtil
	@function Shuffle
	@param tbl table
	@param rngOverride Random?
	@return table

	Shuffles the table.

	```lua
	local t = {1, 2, 3, 4, 5, 6, 7, 8, 9}
	local shuffled = TableUtil.Shuffle(t)
	print(shuffled) --> e.g. {9, 4, 6, 7, 3, 1, 5, 8, 2}
	```

	:::note Arrays only
	This function works on arrays, but not dictionaries.
]=]
local function Shuffle<T>(tbl: { T }, rngOverride: Random?): { T }
	assert(type(tbl) == "table", "First argument must be a table")
	local shuffled = table.clone(tbl)
	local random = if typeof(rngOverride) == "Random" then rngOverride else rng
	for i = #tbl, 2, -1 do
		local j = random:NextInteger(1, i)
		shuffled[i], shuffled[j] = shuffled[j], shuffled[i]
	end
	return shuffled
end

--[=[
	@within TableUtil
	@function Sample
	@param tbl table
	@param sampleSize number
	@param rngOverride Random?
	@return table

	Returns a random sample of the table.

	```lua
	local t = {1, 2, 3, 4, 5, 6, 7, 8, 9}
	local sample = TableUtil.Sample(t, 3)
	print(sample) --> e.g. {6, 2, 5}
	```

	:::note Arrays only
	This function works on arrays, but not dictionaries.
]=]
local function Sample<T>(tbl: { T }, size: number, rngOverride: Random?): { T }
	assert(type(tbl) == "table", "First argument must be a table")
	assert(type(size) == "number", "Second argument must be a number")

	-- If given table is empty, just return a new empty table:
	local len = #tbl
	if len == 0 then
		return {}
	end

	local shuffled = table.clone(tbl)
	local sample = table.create(size)
	local random = if typeof(rngOverride) == "Random" then rngOverride else rng

	-- Clamp sample size to be no larger than the given table size:
	size = math.clamp(size, 1, len)

	for i = 1, size do
		local j = random:NextInteger(i, len)
		shuffled[i], shuffled[j] = shuffled[j], shuffled[i]
	end

	table.move(shuffled, 1, size, 1, sample)

	return sample
end

--[=[
	@within TableUtil
	@function Flat
	@param tbl table
	@param depth number?
	@return table

	Returns a new table where all sub-arrays have been
	bubbled up to the top. The depth at which the scan
	is performed is dictated by the `depth` parameter,
	which is set to `1` by default.

	```lua
	local t = {{10, 20}, {90, 100}, {30, 15}}
	local flat = TableUtil.Flat(t)
	print(flat) --> {10, 20, 90, 100, 30, 15}
	```

	:::note Arrays only
	This function works on arrays, but not dictionaries.
]=]
local function Flat<T>(tbl: { T }, depth: number?): { T }
	local maxDepth: number = if type(depth) == "number" then depth else 1
	local flatTbl = table.create(#tbl)
	local function Scan(t: { any }, d: number)
		for _, v in t do
			if type(v) == "table" and d < maxDepth then
				Scan(v, d + 1)
			else
				table.insert(flatTbl, v)
			end
		end
	end
	Scan(tbl, 0)
	return flatTbl
end

--[=[
	@within TableUtil
	@function FlatMap
	@param tbl table
	@param predicate (key: any, value: any, tbl: table) -> newValue: any
	@return table

	Calls `TableUtil.Map` on the given table and predicate, and then
	calls `TableUtil.Flat` on the result from the map operation.

	```lua
	local t = {10, 20, 30}
	local result = TableUtil.FlatMap(t, function(value)
		return {value, value * 2}
	end)
	print(result) --> {10, 20, 20, 40, 30, 60}
	```

	:::note Arrays only
	This function works on arrays, but not dictionaries.
]=]
local function FlatMap<T, M>(tbl: { T }, callback: (T, number, { T }) -> M): { M }
	return Flat(Map(tbl, callback))
end

--[=[
	@within TableUtil
	@function Keys
	@param tbl table
	@return table

	Returns an array with all the keys in the table.

	```lua
	local t = {A = 10, B = 20, C = 30}
	local keys = TableUtil.Keys(t)
	print(keys) --> {"A", "B", "C"}
	```

	:::caution Ordering
	The ordering of the keys is never guaranteed. If order is imperative, call
	`table.sort` on the resulting `keys` array.
	```lua
	local keys = TableUtil.Keys(t)
	table.sort(keys)
	```
]=]
local function Keys<K, V>(tbl: { [K]: V }): { K }
	local keys = table.create(#tbl)
	for k in tbl do
		table.insert(keys, k)
	end
	return keys
end

--[=[
	@within TableUtil
	@function Values
	@param tbl table
	@return table

	Returns an array with all the values in the table.

	```lua
	local t = {A = 10, B = 20, C = 30}
	local values = TableUtil.Values(t)
	print(values) --> {10, 20, 30}
	```

	:::caution Ordering
	The ordering of the values is never guaranteed. If order is imperative, call
	`table.sort` on the resulting `values` array.
	```lua
	local values = TableUtil.Values(t)
	table.sort(values)
	```
]=]
local function Values<K, V>(tbl: { [K]: V }): { V }
	local values = table.create(#tbl)
	for _, v in tbl do
		table.insert(values, v)
	end
	return values
end

--[=[
	@within TableUtil
	@function Find
	@param tbl table
	@param callback (value: any, index: any, tbl: table) -> boolean
	@return (value: any?, key: any?)

	Performs a linear scan across the table and calls `callback` on
	each item in the array. Returns the value and key of the first
	pair in which the callback returns `true`.

	```lua
	local t = {
		{Name = "Bob", Age = 20};
		{Name = "Jill", Age = 30};
		{Name = "Ann", Age = 25};
	}

	-- Find first person who has a name starting with J:
	local firstPersonWithJ = TableUtil.Find(t, function(person)
		return person.Name:sub(1, 1):lower() == "j"
	end)

	print(firstPersonWithJ) --> {Name = "Jill", Age = 30}
	```

	:::caution Dictionary Ordering
	While `Find` can also be used with dictionaries, dictionary ordering is never
	guaranteed, and thus the result could be different if there are more
	than one possible matches given the data and callback function.
]=]
local function Find<K, V>(tbl: { [K]: V }, callback: (V, K, { [K]: V }) -> boolean): (V?, K?)
	for k, v in tbl do
		if callback(v, k, tbl) then
			return v, k
		end
	end
	return nil, nil
end

--[=[
	@within TableUtil
	@function Every
	@param tbl table
	@param callback (value: any, index: any, tbl: table) -> boolean
	@return boolean

	Returns `true` if the `callback` also returns `true` for _every_
	item in the table.

	```lua
	local t = {10, 20, 40, 50, 60}

	local allAboveZero = TableUtil.Every(t, function(value)
		return value > 0
	end)

	print("All above zero:", allAboveZero) --> All above zero: true
	```
]=]
local function Every<K, V>(tbl: { [K]: V }, callback: (V, K, { [K]: V }) -> boolean): boolean
	for k, v in tbl do
		if not callback(v, k, tbl) then
			return false
		end
	end
	return true
end

--[=[
	@within TableUtil
	@function Some
	@param tbl table
	@param callback (value: any, index: any, tbl: table) -> boolean
	@return boolean

	Returns `true` if the `callback` also returns `true` for _at least
	one_ of the items in the table.

	```lua
	local t = {10, 20, 40, 50, 60}

	local someBelowTwenty = TableUtil.Some(t, function(value)
		return value < 20
	end)

	print("Some below twenty:", someBelowTwenty) --> Some below twenty: true
	```
]=]
local function Some<K, V>(tbl: { [K]: V }, callback: (V, K, { [K]: V }) -> boolean): boolean
	for k, v in tbl do
		if callback(v, k, tbl) then
			return true
		end
	end
	return false
end

--[=[
	@within TableUtil
	@function Truncate
	@param tbl table
	@param length number
	@return table

	Returns a new table truncated to the length of `length`. Any length
	equal or greater than the current length will simply return a
	shallow copy of the table.

	```lua
	local t = {10, 20, 30, 40, 50, 60, 70, 80}
	local tTruncated = TableUtil.Truncate(t, 3)
	print(tTruncated) --> {10, 20, 30}
	```
]=]
local function Truncate<T>(tbl: { T }, len: number): { T }
	local n = #tbl
	len = math.clamp(len, 1, n)
	return if len == n then table.clone(tbl) else table.move(tbl, 1, len, 1, table.create(len))
end

--[=[
	@within TableUtil
	@function Zip
	@param ... table
	@return (iter: (t: table, k: any) -> (key: any?, values: table?), tbl: table, startIndex: any?)

	Returns an iterator that can scan through multiple tables at the same time side-by-side, matching
	against shared keys/indices.

	```lua
	local t1 = {10, 20, 30, 40, 50}
	local t2 = {60, 70, 80, 90, 100}

	for key,values in TableUtil.Zip(t1, t2) do
		print(key, values)
	end

	--[[
		Outputs:
		1 {10, 60}
		2 {20, 70}
		3 {30, 80}
		4 {40, 90}
		5 {50, 100}
	--]]
	```
]=]
local function Zip(...: { [any]: any }): ((t: { any }, k: any) -> (any, any), { any }, any)
	assert(select("#", ...) > 0, "Must supply at least 1 table")
	local function ZipIteratorArray(all: { any }, k: number): (number?, { any }?)
		k += 1
		local values = {}
		for i, t in all do
			local v = t[k]
			if v ~= nil then
				values[i] = v
			else
				return nil, nil
			end
		end
		return k, values
	end
	local function ZipIteratorMap(all: { [any]: any }, k: any): (number?, { any }?)
		local values = {}
		for i, t in all do
			local v = next(t, k)
			if v ~= nil then
				values[i] = v
			else
				return nil, nil
			end
		end
		return k, values
	end
	local all = { ... }
	if #all[1] > 0 then
		return ZipIteratorArray, all, 0
	else
		return ZipIteratorMap, all, nil
	end
end

--[=[
	@within TableUtil
	@function Lock
	@param tbl table
	@return table

	Locks the table using `table.freeze`, as well as any
	nested tables within the given table. This will lock
	the whole deep structure of the table, disallowing any
	further modifications.

	```lua
	local tbl = {xyz = {abc = 32}}
	tbl.xyz.abc = 28 -- Works fine
	TableUtil.Lock(tbl)
	tbl.xyz.abc = 64 -- Will throw an error (cannot modify readonly table)
	```
]=]
local function Lock<T>(tbl: T): T
	local function Freeze(t: { [any]: any })
		for k, v in pairs(t) do
			if type(v) == "table" then
				t[k] = Freeze(v)
			end
		end
		return table.freeze(t)
	end
	return Freeze(tbl :: any)
end

--[=[
	@within TableUtil
	@function IsEmpty
	@param tbl table
	@return boolean

	Returns `true` if the given table is empty. This is
	simply performed by checking if `next(tbl)` is `nil`
	and works for both arrays and dictionaries. This is
	useful when needing to check if a table is empty but
	not knowing if it is an array or dictionary.

	```lua
	TableUtil.IsEmpty({}) -- true
	TableUtil.IsEmpty({"abc"}) -- false
	TableUtil.IsEmpty({abc = 32}) -- false
	```
]=]
local function IsEmpty(tbl: { any }): boolean
	return next(tbl) == nil
end

--[=[
	@within TableUtil
	@function EncodeJSON
	@param value any
	@return string

	Proxy for [`HttpService:JSONEncode`](https://developer.roblox.com/en-us/api-reference/function/HttpService/JSONEncode).
]=]
local function EncodeJSON(value: any): string
	return HttpService:JSONEncode(value)
end

--[=[
	@within TableUtil
	@function DecodeJSON
	@param value any
	@return string

	Proxy for [`HttpService:JSONDecode`](https://developer.roblox.com/en-us/api-reference/function/HttpService/JSONDecode).
]=]
local function DecodeJSON(str: string): any
	return HttpService:JSONDecode(str)
end

TableUtil.Copy = Copy
TableUtil.Sync = Sync
TableUtil.Reconcile = Reconcile
TableUtil.SwapRemove = SwapRemove
TableUtil.SwapRemoveFirstValue = SwapRemoveFirstValue
TableUtil.Map = Map
TableUtil.Filter = Filter
TableUtil.Reduce = Reduce
TableUtil.Assign = Assign
TableUtil.Extend = Extend
TableUtil.Reverse = Reverse
TableUtil.Shuffle = Shuffle
TableUtil.Sample = Sample
TableUtil.Flat = Flat
TableUtil.FlatMap = FlatMap
TableUtil.Keys = Keys
TableUtil.Values = Values
TableUtil.Find = Find
TableUtil.Every = Every
TableUtil.Some = Some
TableUtil.Truncate = Truncate
TableUtil.Zip = Zip
TableUtil.Lock = Lock
TableUtil.IsEmpty = IsEmpty
TableUtil.EncodeJSON = EncodeJSON
TableUtil.DecodeJSON = DecodeJSON

return TableUtil]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005a1d</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX3C036711B2404C72B8591444B89CBE6D">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">init.spec</string>
								<string name="ScriptGuid">{525C10F8-9921-4F20-81F8-E797D769C269}</string>
								<ProtectedString name="Source"><![CDATA[return function()
	local TableUtil = require(script.Parent)

	describe("Copy (Deep)", function()
		it("should create a deep table copy", function()
			local tbl = { a = { b = { c = { d = 32 } } } }
			local tblCopy = TableUtil.Copy(tbl, true)
			expect(tbl).never.to.equal(tblCopy)
			expect(tbl.a).never.to.equal(tblCopy.a)
			expect(tblCopy.a.b.c.d).to.equal(tbl.a.b.c.d)
		end)
	end)

	describe("Copy (Shallow)", function()
		it("should create a shallow dictionary copy", function()
			local tbl = { a = { b = { c = { d = 32 } } } }
			local tblCopy = TableUtil.Copy(tbl)
			expect(tblCopy).never.to.equal(tbl)
			expect(tblCopy.a).to.equal(tbl.a)
			expect(tblCopy.a.b.c.d).to.equal(tbl.a.b.c.d)
		end)

		it("should create a shallow array copy", function()
			local tbl = { 10, 20, 30, 40 }
			local tblCopy = TableUtil.Copy(tbl)
			expect(tblCopy).never.to.equal(tbl)
			for i, v in ipairs(tbl) do
				expect(tblCopy[i]).to.equal(v)
			end
		end)
	end)

	describe("Sync", function()
		it("should sync tables", function()
			local template = { a = 32, b = 64, c = 128, e = { h = 1 } }
			local tblSrc = { a = 32, b = 10, d = 1, e = { h = 2, n = 2 }, f = { x = 10 } }
			local tbl = TableUtil.Sync(tblSrc, template)
			expect(tbl.a).to.equal(template.a)
			expect(tbl.b).to.equal(10)
			expect(tbl.c).to.equal(template.c)
			expect(tbl.d).never.to.be.ok()
			expect(tbl.e.h).to.equal(2)
			expect(tbl.e.n).never.to.be.ok()
			expect(tbl.f).never.to.be.ok()
		end)
	end)

	describe("Reconcile", function()
		it("should reconcile table", function()
			local template = { kills = 0, deaths = 0, xp = 10, stuff = {}, stuff2 = "abc", stuff3 = { "data" } }
			local data =
				{ kills = 10, deaths = 4, stuff = { "abc", "xyz" }, extra = 5, stuff2 = { abc = 10 }, stuff3 = true }
			local reconciled = TableUtil.Reconcile(data, template)
			expect(reconciled).never.to.equal(data)
			expect(reconciled).never.to.equal(template)
			expect(reconciled.kills).to.equal(10)
			expect(reconciled.deaths).to.equal(4)
			expect(reconciled.xp).to.equal(10)
			expect(reconciled.stuff[1]).to.equal("abc")
			expect(reconciled.stuff[2]).to.equal("xyz")
			expect(reconciled.extra).to.equal(5)
			expect(type(reconciled.stuff2)).to.equal("table")
			expect(reconciled.stuff2).never.to.equal(data.stuff2)
			expect(reconciled.stuff2.abc).to.equal(10)
			expect(type(reconciled.stuff3)).to.equal("boolean")
			expect(reconciled.stuff3).to.equal(true)
		end)
	end)

	describe("SwapRemove", function()
		it("should swap remove index", function()
			local tbl = { 1, 2, 3, 4, 5 }
			TableUtil.SwapRemove(tbl, 3)
			expect(#tbl).to.equal(4)
			expect(tbl[3]).to.equal(5)
		end)
	end)

	describe("SwapRemoveFirstValue", function()
		it("should swap remove first value given", function()
			local tbl = { "hello", "world", "goodbye", "planet" }
			TableUtil.SwapRemoveFirstValue(tbl, "world")
			expect(#tbl).to.equal(3)
			expect(tbl[2]).to.equal("planet")
		end)
	end)

	describe("Map", function()
		it("should map table", function()
			local tbl = {
				{ FirstName = "John", LastName = "Doe" },
				{ FirstName = "Jane", LastName = "Smith" },
			}
			local tblMapped = TableUtil.Map(tbl, function(person)
				return person.FirstName .. " " .. person.LastName
			end)
			expect(tblMapped[1]).to.equal("John Doe")
			expect(tblMapped[2]).to.equal("Jane Smith")
		end)
	end)

	describe("Filter", function()
		it("should filter table", function()
			local tbl = { 10, 20, 30, 40, 50, 60, 70, 80, 90 }
			local tblFiltered = TableUtil.Filter(tbl, function(n)
				return (n >= 30 and n <= 60)
			end)
			expect(#tblFiltered).to.equal(4)
			expect(tblFiltered[1]).to.equal(30)
			expect(tblFiltered[#tblFiltered]).to.equal(60)
		end)
	end)

	describe("Reduce", function()
		it("should reduce table with numbers", function()
			local tbl = { 1, 2, 3, 4, 5 }
			local reduced = TableUtil.Reduce(tbl, function(accum, value)
				return accum + value
			end)
			expect(reduced).to.equal(15)
		end)

		it("should reduce table", function()
			local tbl = { { Score = 10 }, { Score = 20 }, { Score = 30 } }
			local reduced = TableUtil.Reduce(tbl, function(accum, value)
				return accum + value.Score
			end, 0)
			expect(reduced).to.equal(60)
		end)

		it("should reduce table with initial value", function()
			local tbl = { { Score = 10 }, { Score = 20 }, { Score = 30 } }
			local reduced = TableUtil.Reduce(tbl, function(accum, value)
				return accum + value.Score
			end, 40)
			expect(reduced).to.equal(100)
		end)

		it("should reduce functions", function()
			local function Square(x)
				return x * x
			end
			local function Double(x)
				return x * 2
			end
			local Func = TableUtil.Reduce({ Square, Double }, function(a, b)
				return function(x)
					return a(b(x))
				end
			end)
			local result = Func(10)
			expect(result).to.equal(400)
		end)
	end)

	describe("Assign", function()
		it("should assign tables", function()
			local target = { a = 32, x = 100 }
			local t1 = { b = 64, c = 128 }
			local t2 = { a = 10, c = 100, d = 200 }
			local tbl = TableUtil.Assign(target, t1, t2)
			expect(tbl.a).to.equal(10)
			expect(tbl.b).to.equal(64)
			expect(tbl.c).to.equal(100)
			expect(tbl.d).to.equal(200)
			expect(tbl.x).to.equal(100)
		end)
	end)

	describe("Extend", function()
		it("should extend tables", function()
			local tbl = { "a", "b", "c" }
			local extension = { "d", "e", "f" }
			local extended = TableUtil.Extend(tbl, extension)
			expect(table.concat(extended)).to.equal("abcdef")
		end)
	end)

	describe("Reverse", function()
		it("should create a table in reverse", function()
			local tbl = { 1, 2, 3 }
			local tblRev = TableUtil.Reverse(tbl)
			expect(table.concat(tblRev)).to.equal("321")
		end)
	end)

	describe("Shuffle", function()
		it("should shuffle a table", function()
			local tbl = { 1, 2, 3, 4, 5 }
			expect(function()
				TableUtil.Shuffle(tbl)
			end).never.to.throw()
		end)
	end)

	describe("Sample", function()
		it("should sample a table", function()
			local tbl = { 1, 2, 3, 4, 5 }
			local sample = TableUtil.Sample(tbl, 3)
			expect(#sample).to.equal(3)
		end)
	end)

	describe("Flat", function()
		it("should flatten table", function()
			local tbl = { 1, 2, 3, { 4, 5, { 6, 7 } } }
			local tblFlat = TableUtil.Flat(tbl, 3)
			expect(table.concat(tblFlat)).to.equal("1234567")
		end)
	end)

	describe("FlatMap", function()
		it("should map and flatten table", function()
			local tbl = { 1, 2, 3, 4, 5, 6, 7 }
			local tblFlat = TableUtil.FlatMap(tbl, function(n)
				return { n, n * 2 }
			end)
			expect(table.concat(tblFlat)).to.equal("12243648510612714")
		end)
	end)

	describe("Keys", function()
		it("should give all keys of table", function()
			local tbl = { a = 1, b = 2, c = 3 }
			local keys = TableUtil.Keys(tbl)
			expect(#keys).to.equal(3)
			expect(table.find(keys, "a")).to.be.ok()
			expect(table.find(keys, "b")).to.be.ok()
			expect(table.find(keys, "c")).to.be.ok()
		end)
	end)

	describe("Values", function()
		it("should give all values of table", function()
			local tbl = { a = 1, b = 2, c = 3 }
			local values = TableUtil.Values(tbl)
			expect(#values).to.equal(3)
			expect(table.find(values, 1)).to.be.ok()
			expect(table.find(values, 2)).to.be.ok()
			expect(table.find(values, 3)).to.be.ok()
		end)
	end)

	describe("Find", function()
		it("should find item in array", function()
			local tbl = { 10, 20, 30 }
			local item, index = TableUtil.Find(tbl, function(value)
				return (value == 20)
			end)
			expect(item).to.be.ok()
			expect(index).to.equal(2)
			expect(item).to.equal(20)
		end)

		it("should find item in dictionary", function()
			local tbl = { { Score = 10 }, { Score = 20 }, { Score = 30 } }
			local item, index = TableUtil.Find(tbl, function(value)
				return (value.Score == 20)
			end)
			expect(item).to.be.ok()
			expect(index).to.equal(2)
			expect(item.Score).to.equal(20)
		end)
	end)

	describe("Every", function()
		it("should see every value is above 20", function()
			local tbl = { 21, 40, 200 }
			local every = TableUtil.Every(tbl, function(n)
				return (n > 20)
			end)
			expect(every).to.equal(true)
		end)

		it("should see every value is not above 20", function()
			local tbl = { 20, 40, 200 }
			local every = TableUtil.Every(tbl, function(n)
				return (n > 20)
			end)
			expect(every).never.to.equal(true)
		end)
	end)

	describe("Some", function()
		it("should see some value is above 20", function()
			local tbl = { 5, 40, 1 }
			local every = TableUtil.Some(tbl, function(n)
				return (n > 20)
			end)
			expect(every).to.equal(true)
		end)

		it("should see some value is not above 20", function()
			local tbl = { 5, 15, 1 }
			local every = TableUtil.Some(tbl, function(n)
				return (n > 20)
			end)
			expect(every).never.to.equal(true)
		end)
	end)

	describe("Truncate", function()
		it("should truncate an array", function()
			local t1 = { 1, 2, 3, 4, 5 }
			local t2 = TableUtil.Truncate(t1, 3)
			expect(#t2).to.equal(3)
			expect(t2[1]).to.equal(t1[1])
			expect(t2[2]).to.equal(t1[2])
			expect(t2[3]).to.equal(t1[3])
		end)

		it("should truncate an array with out of bounds sizes", function()
			local t1 = { 1, 2, 3, 4, 5 }
			expect(function()
				TableUtil.Truncate(t1, -1)
			end).to.never.throw()
			expect(function()
				TableUtil.Truncate(t1, #t1 + 1)
			end).to.never.throw()
			local t2 = TableUtil.Truncate(t1, #t1 + 10)
			expect(#t2).to.equal(#t1)
			expect(t2).to.never.equal(t1)
		end)
	end)

	describe("Lock", function()
		it("should lock a table", function()
			local t = { abc = { xyz = { num = 32 } } }
			expect(function()
				t.abc.xyz.num = 64
			end).never.to.throw()
			local t2 = TableUtil.Lock(t)
			expect(t.abc.xyz.num).to.equal(64)
			expect(t).to.equal(t2)
			expect(function()
				t.abc.xyz.num = 10
			end).to.throw()
		end)
	end)

	describe("Zip", function()
		it("should zip arrays together", function()
			local t1 = { 1, 2, 3, 4, 5 }
			local t2 = { 9, 8, 7, 6, 5 }
			local t3 = { 1, 1, 1, 1, 1 }
			local lastIndex = 0
			for i, v in TableUtil.Zip(t1, t2, t3) do
				lastIndex = i
				expect(v[1]).to.equal(t1[i])
				expect(v[2]).to.equal(t2[i])
				expect(v[3]).to.equal(t3[i])
			end
			expect(lastIndex).to.equal(math.min(#t1, #t2, #t3))
		end)

		it("should zip arrays of different lengths together", function()
			local t1 = { 1, 2, 3, 4, 5 }
			local t2 = { 9, 8, 7, 6 }
			local t3 = { 1, 1, 1 }
			local lastIndex = 0
			for i, v in TableUtil.Zip(t1, t2, t3) do
				lastIndex = i
				expect(v[1]).to.equal(t1[i])
				expect(v[2]).to.equal(t2[i])
				expect(v[3]).to.equal(t3[i])
			end
			expect(lastIndex).to.equal(math.min(#t1, #t2, #t3))
		end)

		it("should zip maps together", function()
			local t1 = { a = 10, b = 20, c = 30 }
			local t2 = { a = 100, b = 200, c = 300 }
			local t3 = { a = 3000, b = 2000, c = 3000 }
			for k, v in TableUtil.Zip(t1, t2, t3) do
				expect(v[1]).to.equal(t1[k])
				expect(v[2]).to.equal(t2[k])
				expect(v[3]).to.equal(t3[k])
			end
		end)

		it("should zip maps of different keys together", function()
			local t1 = { a = 10, b = 20, c = 30, d = 40 }
			local t2 = { a = 100, b = 200, c = 300, z = 10 }
			local t3 = { a = 3000, b = 2000, c = 3000, x = 0 }
			for k, v in TableUtil.Zip(t1, t2, t3) do
				expect(v[1]).to.equal(t1[k])
				expect(v[2]).to.equal(t2[k])
				expect(v[3]).to.equal(t3[k])
			end
		end)
	end)

	describe("IsEmpty", function()
		it("should detect that table is empty", function()
			local tbl = {}
			local isEmpty = TableUtil.IsEmpty(tbl)
			expect(isEmpty).to.equal(true)
		end)

		it("should detect that array is not empty", function()
			local tbl = { 10, 20, 30 }
			local isEmpty = TableUtil.IsEmpty(tbl)
			expect(isEmpty).to.equal(false)
		end)

		it("should detect that dictionary is not empty", function()
			local tbl = { a = 10, b = 20, c = 30 }
			local isEmpty = TableUtil.IsEmpty(tbl)
			expect(isEmpty).to.equal(false)
		end)
	end)

	describe("JSON", function()
		it("should encode json", function()
			local tbl = { hello = "world" }
			local json = TableUtil.EncodeJSON(tbl)
			expect(json).to.equal('{"hello":"world"}')
		end)

		it("should decode json", function()
			local json = '{"hello":"world"}'
			local tbl = TableUtil.DecodeJSON(json)
			expect(tbl).to.be.a("table")
			expect(tbl.hello).to.equal("world")
		end)
	end)
end]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005a1e</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXCF2F5AF47612429BA80A765E553E7AA6">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">wally</string>
								<string name="ScriptGuid">{7E6A0271-12F3-49AA-A32E-269AD7BA2674}</string>
								<ProtectedString name="Source"><![CDATA[return {
	package = {
		authors = {"Stephen Leitnick"},
		description = "Table utility functions",
		license = "MIT",
		name = "sleitnick/table-util",
		realm = "shared",
		registry = "https://github.com/UpliftGames/wally-index",
		version = "1.2.1",
	},
}]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900005a1f</UniqueId>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="LuaWebService" referent="RBX78B7B287A06F4AEDA135CA47215E1198">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">LuaWebService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000356</UniqueId>
		</Properties>
	</Item>
	<Item class="ProcessInstancePhysicsService" referent="RBXB11A5B400C444D6D8865ADA15795AFB0">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ProcessInstancePhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000358</UniqueId>
		</Properties>
	</Item>
	<Item class="Lighting" referent="0">
		<Properties>
			<Color3 name="Ambient">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<float name="Brightness">2</float>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<Color3 name="ColorShift_Bottom">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<Color3 name="ColorShift_Top">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<bool name="DefinesCapabilities">false</bool>
			<float name="EnvironmentDiffuseScale">0</float>
			<float name="EnvironmentSpecularScale">0</float>
			<float name="ExposureCompensation">0</float>
			<Color3 name="FogColor">
				<R>0.75</R>
				<G>0.75</G>
				<B>0.75</B>
			</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">41.7332993</float>
			<bool name="GlobalShadows">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">
				<R>0.5</R>
				<G>0.5</G>
				<B>0.5</B>
			</Color3>
			<bool name="Outlines">false</bool>
			<float name="ShadowSoftness">0.5</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<token name="Technology">1</token>
			<string name="TimeOfDay">14:00:00</string>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a90000036d</UniqueId>
		</Properties>
	</Item>
	<Item class="LodDataService" referent="RBX64BA2C86C2DF404693FFBCC96AF9124D">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">LodDataService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900000370</UniqueId>
		</Properties>
	</Item>
	<Item class="ServiceVisibilityService" referent="RBXE752502B05FA452FAF154C622EBD6E34">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<BinaryString name="HiddenServices">AAAAAA==</BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ServiceVisibilityService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900003dcb</UniqueId>
			<BinaryString name="VisibleServices">AAAAAA==</BinaryString>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBXE8162CD5D7AE418EB64C4FA27A2E766B">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="HttpEnabled">false</bool>
			<string name="Name">HttpService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900003de1</UniqueId>
		</Properties>
	</Item>
	<Item class="TestService" referent="RBX1CF771DC872B4943B0EF871FFB8B4282">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoRuns">true</bool>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<string name="Description"></string>
			<bool name="ExecuteWithStudioRun">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="IsSleepAllowed">true</bool>
			<string name="Name">TestService</string>
			<int name="NumberOfPlayers">0</int>
			<double name="SimulateSecondsLag">0</double>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<double name="Timeout">10</double>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900003df1</UniqueId>
		</Properties>
	</Item>
	<Item class="UGCAvatarService" referent="RBXF53A2AD1B014403CA76F28A290DC7113">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">UGCAvatarService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900003df6</UniqueId>
		</Properties>
	</Item>
	<Item class="VirtualInputManager" referent="RBX2D7C28DA40EC4635AE6030C90324CC38">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VirtualInputManager</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900003dfe</UniqueId>
		</Properties>
	</Item>
	<Item class="ProximityPromptService" referent="RBX7F83CFB51237431AA70F370356C42B50">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="Enabled">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxPromptsVisible">16</int>
			<string name="Name">ProximityPromptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">286f9e2715ccce1a062bb0a900004f85</UniqueId>
		</Properties>
	</Item>
	<SharedStrings>
		<SharedString md5="vnASrALObGdJIkbgPn3MTQ==">Q1NHUEhTBwAAAAK9rBk+Jjzqt8Xtar6UNpm3aMsZPQCA77RAWaa2gKToPEBwcrV00Rk9EAAA
AAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP0sAAAAEAAAACq6rvZXhHj9m
zxK8GpKqvZXhHj9AfVU8AACQM2fUUz8AANCzIA+hvZXhHj+clPi8INWdvZXhHj860Qs9HK6r
PZXhHj+WzhI8LJKqPZXhHj8QflW8MtWdPZXhHj9u0Qu9fV+GPZXhHj/3yFi9sHlLPZXhHj9W
e4u9jJT4PJXhHj82D6G9Rs8SPJXhHj8grqu9YH1VvJXhHj8wkqq9QtELvZXhHj821Z29y8hY
vZXhHj+BX4a9QHuLvZXhHj+4eUu9a1+GvZXhHj/DyFg9jHlLvZXhHj88e4s9RJT4vJXhHj8c
D6E9ts4SvJXhHj8Grqs98H1VPJXhHj8Wkqo9ZtELPZXhHj8c1Z0978hYPZXhHj9nX4Y9UnuL
PZXhHj+EeUs9Mg+hPZXhHj80lPg8igAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAAD
AAAADwAAAAAAAAAPAAAADgAAAAAAAAAOAAAADQAAAAAAAAANAAAADAAAAAAAAAAMAAAACwAA
AAAAAAALAAAACgAAAAAAAAAKAAAACQAAAAAAAAAJAAAACAAAAAAAAAAIAAAABwAAAAAAAAAH
AAAABgAAAAAAAAAGAAAABQAAAAAAAAAFAAAAGAAAAAAAAAAYAAAAFwAAAAAAAAAXAAAAFgAA
AAAAAAAWAAAAFQAAAAAAAAAVAAAAFAAAAAAAAAAUAAAAEwAAAAAAAAATAAAAEgAAAAAAAAAS
AAAAEQAAAAAAAAARAAAAEAAAAAAAAAAQAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAAAgAA
AAIAAAAFAAAABgAAAAIAAAAGAAAABwAAAAIAAAAHAAAACAAAAAIAAAAIAAAACQAAAAIAAAAJ
AAAACgAAAAIAAAAKAAAACwAAAAIAAAALAAAADAAAAAIAAAAMAAAADQAAAAIAAAANAAAADgAA
AAIAAAAOAAAADwAAAAIAAAAPAAAAAwAAAAIAAAAEAAAAEAAAAAIAAAAQAAAAEQAAAAIAAAAR
AAAAEgAAAAIAAAASAAAAEwAAAAIAAAATAAAAFAAAAAIAAAAUAAAAFQAAAAIAAAAVAAAAFgAA
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
AAEAAAACAAAAAAAAAAIAAAAGAAAAAAAAAAYAAAAHAAAAAAAAAAcAAAADAAAAAAAAAAMAAAAI
AAAAAAAAAAgAAAAJAAAAAAAAAAkAAAAEAAAAAAAAAAQAAAABAAAAAQAAAAQAAAAFAAAAAQAA
AAUAAAAGAAAAAQAAAAYAAAACAAAAAwAAAAcAAAAIAAAABAAAAAkAAAAFAAAABQAAAAoAAAAL
AAAABQAAAAsAAAAHAAAABQAAAAcAAAAGAAAABQAAAAkAAAAKAAAABwAAAAsAAAAIAAAACAAA
AAsAAAAKAAAACAAAAAoAAAAJAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAA
AAAAAACAPyQAAAAEAAAAshaUPmjTU7+Smhq/shaUPmjTU7/wWBS/shaUPojb075kvdO+O4XL
PmjTU7/Rewu/w6oNP2jTU78+56u+2V6zPojb074+56u+shaUPojb077Fr8m+NqCYPojb077e
QNG+8tm/Pojb074+56u+B2IGP2jTU7/30di+shYUP2jTU78+56u+2x3VPoIp+L4+56u+PAAA
AAAAAAABAAAABgAAAAAAAAAGAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAACQAAAAAAAAAJ
AAAACgAAAAAAAAAKAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAABQAAAAEAAAAFAAAABgAA
AAIAAAAGAAAABQAAAAIAAAAFAAAACAAAAAIAAAAIAAAABwAAAAIAAAAHAAAAAwAAAAMAAAAH
AAAACAAAAAMAAAAIAAAACQAAAAQAAAAKAAAACwAAAAQAAAALAAAACAAAAAQAAAAIAAAABQAA
AAgAAAALAAAACQAAAAkAAAALAAAACgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAgD8nAAAABAAAABSuqz5o01O/QiYUPxSuqz5o01O/RbkNP6DR2D5o01O/OWAG
PxSuqz6USve+Z9TUPhRnFD9o01O/rPKTPhSuqz6I29O+y5qzPj98Cz9o01O/x4HLPjQssj6I
29O+nUS5PhSuqz6I29O+ZhDAPmilGj9o01O/rPKTPgXXyT6I29O+rPKTPkbS0z6I29O+rPKT
PqI/0T6I29O+bKOYPkIAAAAAAAAAAQAAAAQAAAAAAAAABAAAAAkAAAAAAAAACQAAAAYAAAAA
AAAABgAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAgAAAAAAAAACAAAAAUAAAAAAAAABQAA
AAEAAAABAAAABQAAAAQAAAACAAAABgAAAAcAAAACAAAABwAAAAMAAAADAAAABwAAAAgAAAAE
AAAABQAAAAoAAAAEAAAACgAAAAsAAAAEAAAACwAAAAkAAAAFAAAACAAAAAcAAAAFAAAABwAA
AAwAAAAFAAAADAAAAAsAAAAFAAAACwAAAAoAAAAGAAAACQAAAAsAAAAGAAAACwAAAAwAAAAG
AAAADAAAAAcAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/JAAA
AAQAAAAE18m+iNvTvvjuk77TztO+iNvTvvjuk74TZxS/aNNTv/juk74Urqu+iNvTvq6Ys74U
Q9G+iNvTvvSfmL5npRq/aNNTv/juk74Urqu+aNNTv/e4Db8Urqu+iNvTvqESwL4+fAu/aNNT
v5aEy74Urqu+aNNTvyMoFL8Urqu+lEr3vj7Q1L6g0di+aNNTv4xfBr88AAAAAAAAAAEAAAAF
AAAAAAAAAAUAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAHAAAAAAAAAAcAAAAEAAAAAAAA
AAQAAAABAAAAAQAAAAQAAAAFAAAAAgAAAAUAAAAIAAAAAgAAAAgAAAALAAAAAgAAAAsAAAAJ
AAAAAgAAAAkAAAAGAAAAAgAAAAYAAAADAAAAAwAAAAYAAAAJAAAAAwAAAAkAAAAKAAAAAwAA
AAoAAAAHAAAABAAAAAcAAAAIAAAABAAAAAgAAAAFAAAABwAAAAoAAAALAAAABwAAAAsAAAAI
AAAACQAAAAsAAAAKAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACA
PzAAAAAEAAAARHdPPgAAKLaC+IC+2/+kPgAAKLYAiXG68JFhPgAAKLaC+IC+bQPUPjnW076C
+IC+7zT4PjnW074AiXG6vT+rPgAAKLYAiXG6QWmGPgAAKLYTyFi+ZeefPg/UIL6C+IC+0RHe
PjnW076C+IC+bGsAPznW074AiXG6oNn/PjnW077KL6C97ZaqPgAAKLYes1W9nN2dPgAAKLZ+
2Au+UA3hPjnW077qOni+uYL5PjnW077Trva9ksXsPjnW074gw1G+VAAAAAAAAAABAAAABQAA
AAAAAAAFAAAACwAAAAAAAAALAAAADAAAAAAAAAAMAAAABgAAAAAAAAAGAAAAAgAAAAAAAAAC
AAAABwAAAAAAAAAHAAAACAAAAAAAAAAIAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAAAQAA
AAEAAAAEAAAACQAAAAEAAAAJAAAABQAAAAIAAAAGAAAABwAAAAMAAAAIAAAADQAAAAMAAAAN
AAAADwAAAAMAAAAPAAAADgAAAAMAAAAOAAAACgAAAAMAAAAKAAAACQAAAAMAAAAJAAAABAAA
AAUAAAAJAAAACgAAAAUAAAAKAAAACwAAAAYAAAAMAAAADQAAAAYAAAANAAAABwAAAAcAAAAN
AAAACAAAAAoAAAAOAAAACwAAAAsAAAAOAAAADAAAAAwAAAAOAAAADwAAAAwAAAAPAAAADQAA
ABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD85AAAABAAAAJVnAL/s
0NO+AKxkOiQ1+L461tO+AKxkOk0/AL/s0NO+7IPZPEUQ8r7zTK++AKxkOk/+pL4AACi2AKxk
Ojx3T74AACi2ufuAPrQA1L7s0NO+ufuAPq4S3r7s0NO+ufuAPkMK4b7s0NO+3EB4PhDG7L7s
0NO+JsdRPhB/+b7s0NO+G7v2PaTZ/77s0NO+3CqgPQk+q74AACi2AKxkOiCZYb4AACi2ufuA
Pvrln74Q1CC+ufuAPnlohr4AACi2csxYPhTgnb4AACi2BdkLPhOZqr4AACi27qNVPZVolb6J
/vm9ufuAPmYAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAwAAAAAAAAADAAA
AAQAAAAAAAAABAAAAAEAAAABAAAABAAAAAUAAAABAAAABQAAAAYAAAABAAAABgAAAAcAAAAB
AAAABwAAAAgAAAABAAAACAAAAAkAAAABAAAACQAAAAoAAAABAAAACgAAAAsAAAABAAAACwAA
AAIAAAACAAAACwAAAAMAAAADAAAACwAAAAwAAAAEAAAADAAAABEAAAAEAAAAEQAAABAAAAAE
AAAAEAAAAA8AAAAEAAAADwAAAA0AAAAEAAAADQAAAAUAAAAFAAAADQAAABIAAAAFAAAAEgAA
AA4AAAAFAAAADgAAAAcAAAAFAAAABwAAAAYAAAAHAAAADgAAAAgAAAAIAAAADgAAAA8AAAAI
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
AAAAAAADAAAACQAAAAAAAAAJAAAADQAAAAAAAAANAAAAEAAAAAAAAAAQAAAADwAAAAAAAAAP
AAAADgAAAAAAAAAOAAAACgAAAAAAAAAKAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAABQAA
AAEAAAAFAAAABgAAAAIAAAAHAAAACAAAAAIAAAAIAAAACQAAAAIAAAAJAAAAAwAAAAQAAAAK
AAAACwAAAAQAAAALAAAABQAAAAUAAAALAAAADAAAAAUAAAAMAAAACAAAAAUAAAAIAAAABwAA
AAUAAAAHAAAABgAAAAgAAAAMAAAADQAAAAgAAAANAAAACQAAAAoAAAAOAAAACwAAAAsAAAAO
AAAADAAAAAwAAAAOAAAADwAAAAwAAAAPAAAAEAAAAAwAAAAQAAAADQAAABAAAAAAAAAAAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8zAAAABAAAAIk/+L6I29O+AKxkOuFsAL+I
29O+AKxkOru8Jb9o01O/AKxkOgTUyb6I29O++O6Tvp1+AL+I29O+0O0gvEc3K79o01O/AKxk
OtBkFL9o01O/+O6Tvt7Q076I29O++O6TvmWnAL+I29O+mkURvU6sK79o01O/M/GSvWiiGr9o
01O/+O6Tvm8WAr8adR6/+O6TvuUO3L6I29O+BtSEvsTDAL+I29O+GHNcvaQRIb9o01O/K7F4
vqTu9r6I29O+fsAOvmyg8b6I29O+xH86vloAAAAAAAAAAQAAAAUAAAAAAAAABQAAAAIAAAAA
AAAAAgAAAAMAAAAAAAAAAwAAAAcAAAAAAAAABwAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAA
AA8AAAAAAAAADwAAAA0AAAAAAAAADQAAAAgAAAAAAAAACAAAAAQAAAAAAAAABAAAAAEAAAAB
AAAABAAAAAUAAAACAAAABQAAAAkAAAACAAAACQAAAA4AAAACAAAADgAAAAoAAAACAAAACgAA
AAYAAAACAAAABgAAAAMAAAADAAAABgAAAAoAAAADAAAACgAAAAsAAAADAAAACwAAAAcAAAAE
AAAACAAAAAkAAAAEAAAACQAAAAUAAAAHAAAACwAAAAwAAAAIAAAADQAAAAkAAAAJAAAADQAA
AA8AAAAJAAAADwAAAA4AAAAKAAAADgAAAAsAAAALAAAADgAAABAAAAALAAAAEAAAAAwAAAAO
AAAADwAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/VAAA
AAQAAACI8ZI8ONjTPhquK77jtng9ONjTPrkSIb4AAGAzONjTPs01K74AAGAzQuAeP247q70Q
FBM8QuAeP4yiq73ytvg8QuAePyoHob3jiks9QuAeP3p6i70Mccs9ONjTPtl0C74AAGAzONjT
Pro7Kz4AAGAzQuAeP+kkqz2ycIY9QuAeP8PKWL0rWwY+ONjTPrHQ2L0yoNU8ONjTPt6PKj64
wlU8QuAePw15qj3M3Z09QuAeP6rbC7172R0+ONjTPmjQi70s64s9ONjTPorOHT6Z4gs9QuAe
P+jInT1ho6o9QuAePykHVbwokio+ONjTPp1j1bxMwNg9ONjTPqRgBj5Y61g9QuAeP9NJhj0c
rqs9QuAePwpEEjwYris+ONjTPhNxkjxOews+ONjTPiteyz3sg4s9QuAeP+hSSz3MF6E9QuAe
P/o2+Dx7EyE+ONjTPt5veD2cAAAAAAAAAAEAAAAHAAAAAAAAAAcAAAALAAAAAAAAAAsAAAAP
AAAAAAAAAA8AAAATAAAAAAAAABMAAAAXAAAAAAAAABcAAAAbAAAAAAAAABsAAAAYAAAAAAAA
ABgAAAAUAAAAAAAAABQAAAAQAAAAAAAAABAAAAAMAAAAAAAAAAwAAAAIAAAAAAAAAAgAAAAC
AAAAAAAAAAIAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAABAAAAAQAAAAQAAAAFAAAAAQAA
AAUAAAAGAAAAAQAAAAYAAAAHAAAAAgAAAAgAAAAJAAAAAgAAAAkAAAADAAAAAwAAAAkAAAAN
AAAAAwAAAA0AAAARAAAAAwAAABEAAAAVAAAAAwAAABUAAAAZAAAAAwAAABkAAAAaAAAAAwAA
ABoAAAAWAAAAAwAAABYAAAASAAAAAwAAABIAAAAOAAAAAwAAAA4AAAAKAAAAAwAAAAoAAAAG
AAAAAwAAAAYAAAAFAAAAAwAAAAUAAAAEAAAABgAAAAoAAAALAAAABgAAAAsAAAAHAAAACAAA
AAwAAAANAAAACAAAAA0AAAAJAAAACgAAAA4AAAAPAAAACgAAAA8AAAALAAAADAAAABAAAAAR
AAAADAAAABEAAAANAAAADgAAABIAAAAPAAAADwAAABIAAAATAAAAEAAAABQAAAARAAAAEQAA
ABQAAAAVAAAAEgAAABYAAAAXAAAAEgAAABcAAAATAAAAFAAAABgAAAAZAAAAFAAAABkAAAAV
AAAAFgAAABoAAAAXAAAAFwAAABoAAAAbAAAAGAAAABsAAAAZAAAAGQAAABsAAAAaAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP1QAAAAEAAAAAACQMzjY0z7G
Oyu+8p/VvDjY0z7qjyq+OMJVvELgHj8leaq9AACQM0LgHj8BJau9AACQMzjY0z7BNSs+HOuL
vTjY0z6Wzh2+eeILvULgHj8AyZ29AACQM0LgHj9WO6s9SPGSvDjY0z4Oris+cdHYvTjY0z6w
YAa+OOtYvULgHj/rSYa9kBMTvELgHj90oqs9w7Z4vTjY0z6tEiE+RnsLvjjY0z5DXsu93IOL
vULgHj8YU0u9srb4vELgHj8SB6E9/HDLvTjY0z7NdAs+w4pLvULgHj9ieos9cxMhvjjY0z4O
cHi9vBehvULgHj9aN/i8I1sGvjjY0z6Z0Ng9onCGvULgHj+Tylg9EK4rvjjY0z5zcZK8DK6r
vULgHj/KRBK8c9kdvjjY0z5Q0Is9vN2dvULgHj962ws9IJIqvjjY0z49Y9U8UaOqvULgHj9p
BlU8nAAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABwAAAAAAAAAHAAAABAAA
AAAAAAAEAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAFAAAAAAAAAAU
AAAAGAAAAAAAAAAYAAAAGgAAAAAAAAAaAAAAFgAAAAAAAAAWAAAAEgAAAAAAAAASAAAADQAA
AAAAAAANAAAACQAAAAAAAAAJAAAABQAAAAAAAAAFAAAAAQAAAAEAAAAFAAAABgAAAAEAAAAG
AAAAAgAAAAIAAAAGAAAACgAAAAIAAAAKAAAADgAAAAIAAAAOAAAAEwAAAAIAAAATAAAAFwAA
AAIAAAAXAAAAGwAAAAIAAAAbAAAAGQAAAAIAAAAZAAAAFQAAAAIAAAAVAAAAEQAAAAIAAAAR
AAAADwAAAAIAAAAPAAAACwAAAAIAAAALAAAABwAAAAIAAAAHAAAAAwAAAAQAAAAHAAAACAAA
AAUAAAAJAAAABgAAAAYAAAAJAAAACgAAAAcAAAALAAAACAAAAAgAAAALAAAADAAAAAkAAAAN
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
AAAAAAAAABEAAAALAAAAAAAAAAsAAAAHAAAAAAAAAAcAAAADAAAAAAAAAAMAAAABAAAAAQAA
AAMAAAAEAAAAAgAAAAUAAAAGAAAAAwAAAAcAAAAMAAAAAwAAAAwAAAATAAAAAwAAABMAAAAN
AAAAAwAAAA0AAAAIAAAAAwAAAAgAAAAEAAAABAAAAAgAAAANAAAABAAAAA0AAAASAAAABAAA
ABIAAAAPAAAABAAAAA8AAAAOAAAABAAAAA4AAAAJAAAABQAAAAkAAAAKAAAABQAAAAoAAAAG
AAAABwAAAAsAAAAMAAAACQAAAA4AAAAKAAAACgAAAA4AAAAPAAAACgAAAA8AAAAQAAAACwAA
ABEAAAASAAAACwAAABIAAAATAAAACwAAABMAAAAMAAAADQAAABMAAAASAAAADwAAABIAAAAQ
AAAAEAAAABIAAAAUAAAAEQAAABQAAAASAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAA
AAAAAAAAAAAAAACAPzwAAAAEAAAAyMWAvjnW0740PN6+yMWAvjnW076cJNS+taKivjnW074/
ksm+yMWAvikWH77ulp++yMWAvgAAKLY7A1C+BP6kvgAAKLYAg1k6PoLQvtmKXb4Ag1k6Jjj4
vjnW074Ag1k6JDrRvjnW075KnZi+i4KLvgAAKLbikEu+yMWAvtVB973KNpW+yMWAvgAAKLZp
BGK+PD6rvgAAKLYAg1k6OWgAvznW074Ag1k6XprxvjnW076Mmzq+GxmhvgAAKLbAy/i9vRHy
vqRHr74Ag1k6YbKrvgAAKLbEQxO9j8IAvznW076crVy9+HkAvznW075QeyG8bAAAAAAAAAAB
AAAABwAAAAAAAAAHAAAADQAAAAAAAAANAAAAEwAAAAAAAAATAAAAEgAAAAAAAAASAAAADgAA
AAAAAAAOAAAACAAAAAAAAAAIAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAACgAAAAAAAAAK
AAAACwAAAAAAAAALAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAABQAAAAEAAAAFAAAABgAA
AAEAAAAGAAAABwAAAAIAAAAIAAAACQAAAAIAAAAJAAAACgAAAAIAAAAKAAAAAwAAAAQAAAAL
AAAACQAAAAQAAAAJAAAADwAAAAQAAAAPAAAAEQAAAAQAAAARAAAADAAAAAQAAAAMAAAABQAA
AAUAAAAMAAAAEAAAAAUAAAAQAAAADQAAAAUAAAANAAAABwAAAAUAAAAHAAAABgAAAAgAAAAO
AAAACQAAAAkAAAALAAAACgAAAAkAAAAOAAAADwAAAAwAAAARAAAAEgAAAAwAAAASAAAAEAAA
AA0AAAAQAAAAEwAAAA4AAAASAAAADwAAAA8AAAASAAAAEQAAABAAAAASAAAAEwAAAA==</SharedString>
		<SharedString md5="yuZpQdnvvUBOTYh1jqZ2cA=="></SharedString>
	</SharedStrings>
</roblox>